---
title: "SafeNet: A European database of plant-pollinator interactions"
format:
  pdf:
    include-in-header: 
      text: |
        \usepackage{lscape}
        \newcommand{\blandscape}{\begin{landscape}}
        \newcommand{\elandscape}{\end{landscape}}
        \usepackage{caption}
        \captionsetup[figure]{labelformat=empty}
        \captionsetup[table]{labelformat=empty}

bibliography: references.bib
latex-tinytex: false
link-citations: TRUE
linkcolor: RoyalBlue
urlcolor: RoyalBlue
---

```{r Load libraries, echo=FALSE, message=FALSE, cache=FALSE, warning=FALSE}
library(dplyr) #For handling fata 
library(sf) #For handling coordinates and plotting
library(scales) #For plotting (decimals on axes)
library(lubridate) #To operate with dates
library(tidyr) #Reshape data (wide format)
library(stringr) #Fix/modify strings
library(forcats)
library(readr)
#Load libraries for plotting
library(giscoR) #Maps
library(ggstar) #cool shapes as points
library(ggplot2) #general plotting
library(ggtree) #phylo trees
library(ggpattern) #cool shapes in barplots
library(patchwork) #plot organisation
library(cowplot) #plot organisation
library(viridis) #colours
library(ggnewscale)
library(ggtreeExtra)
library(kableExtra)

```

```{r echo=FALSE, message=FALSE, cache=FALSE, warning=FALSE}
#Load data
data = readRDS("../Data/3_Final_data/Interactions_uncounted.rds")
#Bee-syrphid Masterlist
master_list = read_csv("../Data/Species_taxonomy/Thesaurus/Master_bees_syrphids.csv")
#Load butterfly masterlist
master_list1 <- read.delim(file = "../Data/Species_taxonomy/Thesaurus/Butterfly_taxon.txt",
                    header = T)
#Prepare table with data structure (as it would be made available to others)
safenet_database = readRDS("../Data/3_Final_data/Interaction_data.rds")


#Work around to get the three cols
#Note that month 1 and day 1 indicates the presence of a missing value
#At least in Europe :)
data = data %>%
dplyr::mutate(Year = lubridate::year(Date), 
                Month = lubridate::month(Date), 
                Day = lubridate::day(Date))

#Country number
country_number = data %>% 
select(Country) %>% 
n_distinct()
#Study number
study_number = data %>% 
select(Study_id) %>% 
n_distinct()
#Average study number
studies_by_country = data %>% 
group_by(Country) %>% 
summarise(study_number = n_distinct(Study_id)) %>% 
summarise(mean(study_number)) %>% 
pull()
#$\bar{x}_\frac{studies}{country}$ = `r studies_by_country`
#Sampling method
Sampling_method = data %>% 
group_by(Study_id) %>% 
distinct(Sampling_method) %>%  
ungroup() %>% 
count(Sampling_method) %>% 
mutate(percent_method = n/sum(n) *100) %>% 
mutate(Sampling_method = recode_factor(Sampling_method, "Transect" = "transects"))
#1st most common sampling methodology
most_common_method = Sampling_method %>% 
filter(percent_method == max(percent_method)) 
#Minimum year
min_year = data %>% 
select(Year) %>% 
slice(which.min(Year)) %>% 
pull()
#Maximum year
max_year = data %>% 
select(Year) %>% 
slice(which.max(Year)) %>% 
pull()
#Number of interactions
interaction_number = nrow(data)
#Check number of accepted pollinators
pollinator_spp_number = data %>% 
select(Pollinator_rank, Pollinator_accepted_name)%>%
filter(Pollinator_rank == "SPECIES") %>% 
select(Pollinator_accepted_name) %>% 
n_distinct()
#Check number of plant species
plant_spp_number = data %>% 
select(Plant_rank, Plant_status, 
Plant_matchtype, Plant_accepted_name) %>% 
filter(Plant_rank == "SPECIES") %>% 
select(Plant_accepted_name) %>% 
n_distinct()
#Extract percentage of studies conducted during a single year
dates = data %>% 
select(Study_id, Network_id,Sampling_method, Day, Month, Year) %>% 
mutate(Date = dmy(paste(Day, Month, Year, sep = "-"))) %>% 
group_by(Study_id) %>% 
summarise(Count = n_distinct(Year))
#Filter studies with only one year
one_year = dates %>% 
filter(Count == 1) %>% 
pull() %>% 
length() / nrow(dates) * 100
#Obtain date information
dates = data %>% 
select(Study_id, Network_id,Sampling_method, Day, Month, Year) %>% 
mutate(Date = dmy(paste(Day, Month, Year, sep = "-")))

dates1 = dates %>% 
group_by(Study_id, Network_id, Sampling_method) %>% 
summarise(Min_date = min(Date), 
          Max_date= max(Date), 
          Sampling_days = n_distinct(Date)) %>% 
mutate(Sampling_period = as.numeric(Max_date - Min_date)) %>% 
mutate(Study_number = as.integer(str_extract(Study_id, "[^_]+")), 
       .before=Study_id) %>% 
arrange(Study_number) %>% 
mutate(Sampling_period = case_when(!is.na(Sampling_period) ~ Sampling_period + 1,
TRUE ~ NA)) %>% 
mutate(Sampling_days = case_when(!is.na(Sampling_period) ~ Sampling_days,
TRUE ~ NA))
#Extract min and max number of sampling days
min_sampling_day = dates1 %>% pull(Sampling_days) %>% min(na.rm = TRUE)
max_sampling_day = dates1 %>% pull(Sampling_days) %>% max(na.rm = TRUE)
#Extract average of sampling days across networks and studies
average_sampling_days = dates1 %>% 
ungroup() %>% 
group_by(Study_id) %>% 
summarise(mean_sampling_days = mean(Sampling_days, na.rm = TRUE)) %>% 
ungroup() %>% 
summarise(mean(mean_sampling_days, na.rm = TRUE)) %>% 
pull()
#Check number of distinct sampling sites
n_sites = data %>% 
select(Latitude, Longitude) %>% 
distinct() %>% 
nrow(.)
#Check number of distinct bioregions
n_bioregion = data %>% 
select(Bioregion) %>% 
distinct()  %>% 
nrow(.)
#Read author list 
authors = readr::read_csv("../Data/Manuscript_info/Authorship_ordered.csv")
#Print authors
authors = authors %>% 
summarise(col = paste(Coauthor_name_aff, collapse="| ")) %>% 
pull()
#Read affiliation list 
aff_list = readr::read_csv("../Data/Manuscript_info/Affiliation_list.csv")
aff_list = aff_list %>% 
summarise(col = paste0(Aff_number_Aff, "\\",sep="")) %>% 
pull()

#Interactions at species level
species_level = data %>% 
filter(Plant_rank == "SPECIES") %>% 
filter(Pollinator_rank == "SPECIES") %>% 
filter(Plant_status == "ACCEPTED") %>% 
filter(Pollinator_status == "ACCEPTED") %>% 
nrow(.)
species_level_int = species_level / nrow(data) * 100
#Read here plant and pollinator coverage
bee_coverage = readRDS("../Data/Manuscript_info/bee_coverage.RData")
lepidoptera_coverage = readRDS("../Data/Manuscript_info/lepidoptera_coverage.RData")
syrphid_coverage = readRDS("../Data/Manuscript_info/syrphid_coverage.RData")
plant_coverage = readRDS("../Data/Manuscript_info/plant_coverage.RData")

#Main orders percentage
o = c("Hymenoptera", "Lepidoptera", "Diptera", "Coleoptera")
main_orders = data %>% 
filter(Pollinator_order %in% o)
main_orders_percent = nrow(main_orders) / nrow(data) * 100

#Prepare table with all info 
#Create variables
vars = colnames(safenet_database)
#Create table
d = tibble(Variable = vars)

d = d %>% 
mutate(Variable = str_replace(Variable, "Latitude", "Latitude-Longitude")) %>% 
filter(!Variable == "Longitude")

#Add descriptor
my_tibble = d %>%
  mutate(Description = case_when(
    Variable == "Study_id" ~ "Identifier of the study",
    Variable == "Network_id" ~ "Identifier of a site sampled within a study",
    Variable == "Sampling_method" ~ "Type of plant-pollinator sampling",
    Variable == "Authors_habitat" ~ "Type of habitat as described by the authors",
    Variable == "SafeNet_habitat" ~ "Type of habitat homogenized across studies",
    Variable == "Bioregion" ~ "European biogiographical regions",
    Variable == "Country" ~ "Country where the plant-pollinator interaction was observed",
    Variable == "Locality" ~ "Locality where the plant-pollinator interaction was observed",
    Variable == "Latitude-Longitude" ~ "Coordinates of the observed interaction in decimal degrees",
    Variable == "Date" ~ "Year, month and day when the observation took place",
    Variable == "Interaction" ~ "Number of interactions. By default is 1 as interactions are provided ungrouped",
    Variable == "Plant_old_name" ~ "Plant species name given by the authors",
    Variable == "Plant_accepted_name" ~ "Harmonized plant species name in the database",
    Variable == "Plant_rank" ~ "Taxonomic rank of the observation",
    Variable == "Plant_order" ~ "Order taxonomic rank of the observed plant species",
    Variable == "Plant_family" ~ "Family taxonomic rank of the observed plant species",
    Variable == "Plant_genus" ~ "Genus taxonomic rank of the observed plant species",
    Variable == "Plant_unsure_id" ~ "Category to indicate if the plant species name is unsure (Yes) or not (No)",
    Variable == "Plant_uncertainty_type" ~ "If the name is unsure, type of species uncertainty is provided",
    Variable == "Pollinator_old_name" ~ "Pollinator species name given by the authors",
    Variable == "Pollinator_accepted_name" ~ "Harmonized pollinator species name in the database",
    Variable == "Pollinator_rank" ~ "Taxonomic rank of the observation",
    Variable == "Pollinator_order" ~ "Order taxonomic rank of the observed pollinator species",
    Variable == "Pollinator_family" ~ "Family taxonomic rank of the observed pollinator species",
    Variable == "Pollinator_genus" ~ "Genus taxonomic rank of the observed pollinator species",
    Variable == "Pollinator_unsure_id" ~ "Category to indicate if the pollinator species name is unsure (Yes) or not (No)",
    Variable == "Pollinator_uncertainty_type" ~ "If the name is unsure, type of species uncertainty is provided",
        Variable == "Flower_data" ~ "Floral data availability (Yes) or (No)",
        Variable == "Flower_data_merger" ~ "Column to merge floral data with the interaction dataset",

    TRUE ~ "Other"
  ))

```


\vspace*{-14mm}


`r authors`

**Corresponding author**= barragansljose@gmail.com\
*All authors excluding the first three and last are ordered alphabetically*

\begingroup
\small

`r aff_list`

\small
\endgroup

\pagebreak

# Abstract
\vspace*{-5mm}

**Motivation:** Pollinators play a crucial role in maintaining Earth's terrestrial biodiversity and human food production by mediating sexual reproduction for most flowering plants. However, their diversity and role as pollinators are increasingly compromised by rapid human-induced environmental changes. One of the major challenges for pollinator conservation, is the lack of robust generalisable data across space and time to comprehend the conservation status and population trends among different pollinator species. Here, we present the SafeNet database, a fully reproducible European-level database containing harmonized taxonomic data on plant-pollinator interactions referenced in both space and time. This database offers an open workflow that allows researchers to track decisions and edit them according to their preferences, while also providing other ecological variables of interest. We hope this database can help researchers to: 1) identify taxonomic, ecological and geographical gaps of knowledge on plant-pollinator interactions; and 2) explore the impacts of global change to guide future conservation planning for both plant and pollinator species.

**Main Types of Variables Included:** SafeNet contains `r prettyNum(interaction_number, big.mark=",")` interactions between plants and pollinators from `r study_number` different studies distributed across `r country_number` European countries. In addition, information about sampling methodology, habitat type, bio-climatic region and further taxonomic rank information for both plant and pollinator species are also provided. 

**Spatial location and grain:** The database contains `r prettyNum(n_sites, big.mark=",")` different sampling locations from natural and anthropogenic habitats that fall in `r n_bioregion` different bio-climatic regions. All records are geo-referenced and presented in the World Geodetic System 1984 (WGS84).

**Time period and grain:** Species interaction data was recorded between `r min_year` and `r max_year`. All records are time-referenced and most of the studies documented interactions in a single flowering season (`r format(round(one_year, 2), nsmall = 2)`%).

**Major taxa and level of measurement:** The database contains interaction data at the species level for `r format(round(species_level_int, 2), nsmall = 2)`% of the records, including a total of `r prettyNum(plant_spp_number, big.mark=",")` plant and `r prettyNum(pollinator_spp_number, big.mark=",")` pollinator species. The database covers `r format(round(plant_coverage, 2), nsmall = 2)`% of the European species of flowering plants. The main focus of this database are insect pollinators and accounts for `r format(round(bee_coverage, 2), nsmall = 2)`% of bees, `r format(round(lepidoptera_coverage, 2), nsmall = 2)`% of butterflies and `r format(round(syrphid_coverage, 2), nsmall = 2)`% of syrphids species at the European level.

**Software format:** The database was built with R software and is stored as ".rds" and ".csv" formats. The construction of the database is fully reproducible and can be accessed at the following PERMANENT LINKS.

**KEYWORDS**\
\begingroup
\small
plant-pollinator interactions, flowering plants, Angiosperms, pollinators, Hymenoptera, Diptera, Lepidoptera, Coleoptera, Europe
\endgroup
\pagebreak

# 1 | INTRODUCTION

The interaction between plants and pollinators is one of the most well-documented mutualisms on Earth. Plant-pollinator interactions involve a great diversity of species, largely attributed to their coevolutive history [@ollerton2017], and are critically important for terrestrial biodiversity and the human economy. The synergistic effects of climate change with other global change pressures are threatening worldwide biodiversity [@sala2000; @bellard2014], including plant and pollinator species as well as their interactions [@gonzalez2013; @settele2016; @eichenberg2021]. Under this scenario, the increasing availability of biodiversity data plays a major role in our ecological understanding of species and guiding conservation planning [@heberling2021]. However, our knowledge of plant and pollinator species and their network of interactions still exhibits major temporal, spatial and taxonomic biases [@archer2014; @troia2016; @poisot2021; @marshall2024], limiting our ability to effectively protect their biodiversity. 

Europe is one of the continents with a larger amount of available biodiversity data [@proencca2017], yet still exhibits major gaps [@wetzel2018; @bennett2018]. While species checklists need to be treated carefully, especially at a macro-ecological scale [@grenie2023], the growing number of European plant and pollinator checklists along with occurrence data, is setting a foundation for the conservation of its flora and their pollinators. However, species richness is just one component of biodiversity and documenting the interaction between plants and pollinators is essential for understanding the fate of the species within an ecosystem [@jordano2016]. Numerous works have studied plant-pollinator interactions in the last decades, originating thousands of plant-pollinator interaction networks worldwide. Several initiatives have tried to integrate plant-pollinator interaction data into databases such as *Mangal* [@poisot2016] or *GloBI* [@poelen2014], resulting in numerous large scale comparative analyses that enhanced our understanding of the ecology of plants and pollinators [e.g., European wild bee data trends\; @marshall2024]. Despite all these resources, Europe lacks accessible harmonized plant-pollinator interaction data that allow researchers to evaluate the state of the art of plant-pollinator interactions at European level, which will guide research efforts, conservation planning and will set a foundation for future global change research. 

The interactions between different plant and pollinator species within a community form complex networks. Macro-ecological analyses of the topology of these networks have revealed common properties across them, such as truncated power-law degree distributions [@jordano1987] or nestedness [@bascompte2003], and has added relevant information of their interaction ecology of plant-pollinator networks across geographic regions [@olesen2002; @traveset2016] and environmental gradients [@ramos2010; @rech2016; @saunders2023]. Although macro-ecological approaches make significant contributions to knowledge, they tend to be rare, and are strongly influenced by the spatio-temporal availability and nature of the data [@burkle2011; @trojelsgaard2013]. For instance, plant-pollinator studies tend to differ in sampling effort and methodology which can impact the structure of the resulting plant-pollinator networks [@gibson2011; @jordano2016]. Further, despite little sampling effort could capture most of the relevant functional species [@hegland2010], most plant-pollinator networks have unobserved interactions because undersampling [@olesen2011; @chacoff2012]. Thus, the lack of strong spatio-temporal coverage along the current intrinsic limitations of sampling plant-pollinator networks, highlight the need of keep gathering and integrating informative species interaction data to properly unravel the different ecological processes at large scales.

Here, we present the SafeNet database, an acronym derived from the European project Safeguard and plant-pollinator networks, which contains harmonized informative interaction data of plants and pollinators at European level. The primary focus of the pollinator taxonomic groups is on the main orders of entomofauna that visit and pollinate flowering plants in Europe. These include insect species from the orders Hymenoptera, Diptera, Lepidoptera, and Coleoptera [@potts2015], which comprise almost the totality of recorded interactions in the SafeNet database (`r format(round(main_orders_percent, 2), nsmall = 2)`%). SafeNet aims to cover a wide range of taxonomic groups and habitats while also provides other variables of interest that allow to better control for the ecological context and sampling methods. In addition, SafeNet offers a transparent and accessible workflow of its data management and species harmonization that allow to being reused and keep building on it over time. We expect that this database will help to evaluate macro-ecological processes and current gaps of plant-pollinator interactions at European level.


# 2 | METHODS

## Data acquisition

This database is the result of one of the working packages of the European project Safeguard. The SafeNet database includes published and unpublished studies compiled initially by a wide number of researchers and institutions within the European continent. Data acquisition followed a non-systematic approach. First, data was directly asked to members of the Safeguard project and then, the request was extended to data owners outside of the project. These other studies were identified by direct communication with other colleagues and by directly searching studies on Google Scholar of under-represented regions of countries within the database. To keep high quality standards that will allow robust future ecological research, we only included: 1) studies that contained time- and geo-referenced records of plant-pollinator interactions; 2) studies with phyto-centric plant-pollinator networks with quantitative visitation data. The database contains `r study_number` independent published and unpublished studies conducted during the time period `r min_year` - `r max_year` on `r country_number` different countries (**Figure 1a** and **Figure 1b**).

## Dataset description

SafeNet includes a total of `r prettyNum(interaction_number, big.mark=",")` distinct interactions, considering interaction as the contact of a given pollinator to the reproductive structure of a particular plant, from `r prettyNum(pollinator_spp_number, big.mark=",")` pollinator and `r prettyNum(plant_spp_number, big.mark=",")` plant species. The majority of plant and pollinator species tend to be regionally specific, with only a minor portion of them being shared across a broad range of studies (**Figure 1b**). These different studies differ in sampling effort and methodology, although most studies took place within a single flowering season (`r format(round(one_year, 2), nsmall = 2)`%), sampled a given location an average of `r format(round(average_sampling_days, 2), nsmall=2)` days, and documented interactions mostly by using `r  most_common_method[[1]]` as sampling method (`r format(round(most_common_method[[3]], 2), nsmall = 2)`%).



```{r echo=FALSE, message=FALSE, cache=FALSE, warning=FALSE, out.width="110%", fig.cap= "\\textbf{Figure 1}. (\\textbf{a}) Approximate locations of the studies of the SafeNet database showing the total number of pollinator (i.e., orange heptagon) and plant (i.e., green circles) species per study. The sizes of these shapes are proportional to the respective species counts. For visualization purposes, we have focused only on the European region with studies and selected a single location per study. (\\textbf{b}) Number of studies by year within the database. (\\textbf{c}) Percentage of shared occurrences of pollinators and plants across studies. Species on the left are highly shared across studies, while species on the right are found only in a few or a single study. As a reference, we have indicated the 50th percentile with a black dashed vertical line."}

#Prepare coordinates
for_plotting = data %>% 
select(Study_id, Latitude, Longitude) %>% 
distinct()
#Get countries and transfrom coordinates
countries <- gisco_get_countries(
resolution = 20) %>%
st_transform(3035) %>% 
sf::st_as_sf(crs = 4326)

#Number of plant and poll species per network
#-----------------------#
#Pollinators------
#-----------------------#
#Check unique number of pollinator species
PollNumber_by_ID = data %>% 
select(Pollinator_rank, Pollinator_accepted_name, Study_id) %>% 
filter(Pollinator_rank == "SPECIES") %>% 
select(Pollinator_accepted_name, Study_id) %>% 
group_by(Study_id) %>% 
summarise(Pollinator_counts = n_distinct(Pollinator_accepted_name))
#Merge now with spp counts by network dataset
poll_data = left_join(PollNumber_by_ID, for_plotting, by = "Study_id")
#Create duplicate cord columns to operate on them
poll_data$coords <- data.frame(
Longitude = poll_data$Longitude, Latitude = poll_data$Latitude)
#Set coordinates
poll_data$coords_sf = st_as_sf(poll_data$coords, 
  coords = c("Longitude", "Latitude"), crs = 4326)
#Plot map of Europe
#Very noisy with many coordinates per point,
#Let's select a unique coordinate by study
poll_data1 =  poll_data %>% 
distinct(Study_id, .keep_all = TRUE)

#-----------------------#
#Plants-----
#-----------------------#
#Check unique number of plant species
PlantNumber_by_ID = data %>% 
select(Plant_rank, Plant_accepted_name, Study_id) %>% 
filter(Plant_rank == "SPECIES") %>% 
select(Plant_accepted_name, Study_id) %>% 
group_by(Study_id) %>% 
summarise(Plant_counts = n_distinct(Plant_accepted_name))
#Merge now with spp counts by network dataset
plant_data = left_join(PlantNumber_by_ID, for_plotting, by = "Study_id")
#Create duplicate cord columns to operate on them
plant_data$coords <- data.frame(
Longitude = plant_data$Longitude, Latitude = plant_data$Latitude)
#Set coordinates
plant_data$coords_sf = st_as_sf(plant_data$coords, 
  coords = c("Longitude", "Latitude"), crs = 4326)
#Plot map of Europe
#Very noisy with many coordinates per point,
#Let's select a unique coordinate by study
plant_data1 =  plant_data %>% 
distinct(Study_id, .keep_all = TRUE)

#Add vars
plant_data1$Group = "Plant"
poll_data1$Group = "Pollinator"
#Rename cols
plant_data2 = plant_data1 %>% 
rename(Counts = Plant_counts)
poll_data2 = poll_data1 %>% 
rename(Counts = Pollinator_counts)
#Bind rows
all_data = bind_rows(plant_data2, poll_data2)


#Try to plot both together (same plot)
map = ggplot(countries) +
geom_sf(fill="floralwhite",color = "black", 
        alpha = 1,linewidth=0.1) + 
geom_star(data = all_data, alpha=1,aes(x= Longitude, y=Latitude,
           size=Counts, starshape = Group, color= Group))+  
coord_sf(crs = st_crs(3035), default_crs = st_crs(4326),
         xlim = c(-14, 39), ylim = c(37, 70))+
theme(panel.grid.major = element_blank(), 
      legend.position = ("top"),
      legend.box = "vertical",
      legend.background = element_blank(),
      legend.box.background = element_blank(),
      legend.key = element_blank(), 
      legend.title = element_text(face ="bold",  size = 6),
      legend.box.spacing = unit(0.2, "cm"),
      legend.margin=margin(0,0,0,0),
        legend.box.margin=margin(-10,-10,-10,-10),
      axis.text = element_text(size=6,                  face="bold"),
      axis.title = element_text(face="bold", size = 8),
         legend.text = element_text(size = 6),                           legend.direction="horizontal",
         legend.spacing.y = unit(-0.3, "cm"),
      legend.title.align=0.5) +
theme(panel.background = element_rect(fill = "aliceblue"),
        panel.border = element_rect(colour = "black",
        fill=NA, size=1)) + 
 scale_size_continuous(name= "Species counts",range = c(0, 3.75))+
scale_color_manual(values=c("#009E73", "#D55E00"),
         guide="none") +
scale_starshape_manual(name = "Taxonomic group",             values = c(15, 7),
             guide=guide_legend(reverse=TRUE,
             override.aes=list(
                 size=2,
                 color=c("Pollinator"= "#D55E00","Plant"="#009E73")))) +
  ylab("Latitude") +
xlab("Longitude") +
scale_x_continuous(breaks = seq(0, 20, by = 10)) +
scale_y_continuous(breaks = seq(40, 60, by = 10)) +
guides(color = "none", size=guide_legend(nrow=1,override.aes = list(starshape =c(15,15, 15), size=c(0.8,1.8,2.8)))) + 
ggtitle("(a)") +
theme(plot.title = element_text(vjust = -12, hjust=0.2, size=10))


#----------------#
#Pollinators
#----------------#
#First select cols of rank, accepted name and study ID
#Then select unique levels by study ID
#Now sum levels (maximum can be as maximum number of studies)
poll_spread = data %>% 
select(Pollinator_rank, Pollinator_accepted_name, Study_id) %>% 
group_by(Study_id) %>% 
filter(Pollinator_rank == "SPECIES") %>% 
distinct(Pollinator_accepted_name) %>% 
ungroup() %>% 
count(Pollinator_accepted_name) %>% 
rename(n_studies_shared = n) %>% 
arrange(-n_studies_shared) %>% 
mutate(Percent_total = n_studies_shared / n_distinct(data$Study_id))
  
#Seelect quantile 50% from the total number of species
spp_number = poll_spread %>%  
select(Pollinator_accepted_name) %>% 
n_distinct()
df = seq(1, spp_number)
quantile_50 = quantile(df, 0.5)

#Obtain most common pollinator for plotting
most_common_poll = poll_spread %>% filter(n_studies_shared == max(n_studies_shared)) %>%
select(Pollinator_accepted_name) %>% pull() 

#Plot
p1 = ggplot(poll_spread, 
aes(reorder(Pollinator_accepted_name,-Percent_total), Percent_total)) +
geom_bar(stat = "identity", 
           color = "#D55E00",
           lwd = 0.015, fill = "#D55E00") +
ylab("Shared pollinators (%)") +
theme_minimal()+
theme(axis.text.x = element_blank(),
  axis.ticks.x=element_blank(),
  axis.ticks.y = element_line(size = 0.2),
  plot.title = element_text(size = 8, face = "bold"), 
  axis.text.y = element_text(size=5),
  panel.grid.major.x = element_blank(),
  panel.grid.minor.y = element_blank(),
  panel.grid.major.y = element_line(size=0.2, linetype =           2)) +
xlab(NULL) +
ylab(NULL) + 
ggtitle("Pollinators")+
geom_vline(xintercept = quantile_50, linetype="dashed", 
color = "black", size=0.25) + 
annotate(geom="text", x=1285, y=0.83, label="50th percentile",          color="black", size = 1.5) +
annotate(geom="text", x=20, y=0.88, label=most_common_poll[1],         color="black",  fontface = 'italic', size = 1.5)+
scale_y_continuous(breaks = seq(0, 0.75, by= 0.25), expand = c(0, 0)) + 
annotate(geom="text", x=-500, y=1.15, label="(c)",color="black", size = 3.5) +
coord_cartesian(xlim=c(0, nlevels(factor(poll_spread$Pollinator_accepted_name))),ylim=c(0, max(poll_spread$Percent_total)), clip="off")

#----------------#
#Plants
#----------------#
plant_spread = data %>% 
select(Plant_rank, Plant_accepted_name, Study_id) %>% 
group_by(Study_id) %>% 
filter(Plant_rank == "SPECIES") %>% 
distinct(Plant_accepted_name) %>% 
ungroup() %>% 
count(Plant_accepted_name) %>% 
rename(n_studies_shared = n) %>% 
arrange(-n_studies_shared) %>% 
mutate(Percent_total = n_studies_shared / n_distinct(data$Study_id))
  
#Seelect quantile 50% from the total number of species
spp_number = plant_spread %>%  
select(Plant_accepted_name) %>% 
n_distinct()
df = seq(1, spp_number)
quantile_50 = quantile(df, 0.5)

#Obtain most common plant for plotting
most_common_plant = plant_spread %>% filter(n_studies_shared == max(n_studies_shared)) %>%
select(Plant_accepted_name) %>% pull() 

#Plot
p2 = ggplot(plant_spread, 
aes(reorder(Plant_accepted_name,-Percent_total), Percent_total, fill = Plant_accepted_name)) +
geom_bar(stat = "identity", 
           color = "#009E73",
           lwd = 0.015, fill = "#009E73") +
theme_minimal()+
theme(axis.text.x = element_blank(),
         axis.ticks.x=element_blank(),
         axis.ticks.y = element_line(size = 0.2),
         axis.title.x = element_text(face = "bold", size = 7),            plot.title = element_text(size = 8, face = "bold"),
         axis.text.y = element_text(size=5),
         panel.grid.major.x = element_blank(),
         panel.grid.minor.y = element_blank(),
         panel.grid.major.y = element_line(size=0.2, linetype =  2),
      axis.title.y = element_text(face= "bold", size= 7, hjust= -0.01, vjust = 1)) +
xlab("Species") +
ylab("Occurrence across studies") + 
ggtitle("Plants") + 
geom_vline(xintercept = quantile_50, linetype="dashed", 
          color = "black", size=0.25) + 
annotate(geom="text", x=835, y=0.7, label="50th percentile",color="black", size = 1.5) + 
annotate(geom="text", x=20, y=0.75, label=most_common_plant[1]
      ,color="black",  fontface = 'italic', size = 1.5)+
annotate(geom="text", x=20, y=-0.08, label="Common spp."
      ,color="black",  size = 1.5) +
annotate(geom="text", x=1200, y=-0.08, label="\'Rare\' spp."
      ,color="black",  size = 1.5) + 
scale_y_continuous(breaks = seq(0, 0.6, by= 0.2), expand = c(0, 0), labels = label_number(accuracy = 0.01)) +
coord_cartesian(xlim=c(0, nlevels(factor(plant_spread$Plant_accepted_name))),ylim=c(0, max(plant_spread$Percent_total)), clip="off")

data2 = data %>%  select(Study_id, Year) %>% 
distinct() %>% 
group_by(Year) %>% 
summarise(Counts = n())




p3 = ggplot(data2, aes(Year, Counts)) +
geom_col(fill = "gray25", width = 0.9, color="black", linewidth = 0.4) +
theme_light() +
theme(plot.margin=unit(c(0,0,0,0), "mm"),
  axis.title.y = element_text(face = "bold", size = 7, vjust = -1.1),
  axis.title.x = element_text(face = "bold", size = 8),
  axis.text.y = element_text(size = 6),
  axis.text.x = element_text(size = 6,  angle = 90), 
  strip.text.x = element_text(size=12),
   axis.ticks.x = element_line(color="black"),
  strip.background = element_rect(
  color="black", fill=NA, size=0.5, linetype="solid")) + 
ylab("Number of studies") +
coord_cartesian(expand = F, clip = "off") + 
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
  panel.background = element_blank(),
  panel.border = element_rect(colour = "black", fill=NA, size=1)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),
panel.border = element_blank(),
axis.line = element_line(color = 'black')) +
scale_y_continuous(breaks = c(0, 4,8,12), labels = c("0", "4","8", "12"), limits = c(0,12)) +
scale_x_continuous(breaks = seq(min(data2$Year), max(data2$Year), by = 2), limits = c(min(data2$Year),max(data2$Year)))+
ggtitle("(b)") +
theme(plot.title = element_text(size = 10,hjust = -0.35, vjust = 0.8))

plot2 = p3 / p1 / p2 

#Plot everything
map + plot_spacer() + plot2 + plot_layout(widths = c(2.1, -0.58, 0.4)) 


```

\newpage

# Data structure

The SafeNet database is available in both .csv and .rds formats. The .csv file contains data in long format, while the .rds file stores the data in a list structure, with networks organized within each study. The data is organized in three different files named interaction data, flower count data and metadata. The interaction file contains `r nrow(my_tibble) + 1` columns that depict where and when the plant-pollinator interaction was observed (**Table 1**). To provide a standard unit of plant-pollinator interaction across studies, each row depicts a single interaction between a plant and a pollinator species. To build a plant-pollinator network matrix at a site level, authors only need to group interactions by plant and pollinator species, site and study. In addition, information about habitat type and bioclimatic region are also provided in this file. The floral count file contains measurements of floral availability and the unit of measurement, and should be merged with the interaction file by using the old plant name provided by the authors, site, and date if available. Only xxxx% of studies contain floral count information. The metadata file contains [...]



```{r, echo=FALSE, message=FALSE, cache=FALSE, warning=FALSE, fig.height=1, fig.width=10}


kable(my_tibble, booktabs = T, linesep = "\\addlinespace", caption = "\\textbf{Table 1.}") %>%
  kable_styling(full_width = F,font_size = 9) %>% row_spec(0, bold=T) %>% 
kable_styling(position = "center")


```


## Taxonomic harmonization

All plant and pollinator species names were checked and standardized according to large scale taxonomic databases. To ensure reproducibility of the workflow, we have conducted this harmonization in R with **rgbif** [@chamberlain2022] as pivotal package to check for species names and retrieve further taxonomic information (i.e., phylum, order, family and genus) from the Global Biodiversity Information Facility (GBIF). The protocol for plants and pollinators is similar but slightly different given the availability of the different taxonomic resources. For transparency, we have included in the database the old species name, the new assigned name, and, if name of the species is uncertain (e.g., species complex or species alike).

For plants: (i) we initially verify exact matches with the GBIF species checklist; (ii) select unmatched cases and fix orthographic errors; (iii) retrieve again taxonomic information for those unmatched cases, evaluate accuracy of fuzzing matching and programmatically fix records that are still not found; (iv) finally, we used the World Flora Taxonomic Backbone [@govaerts2021\; WFO, July 7, 2022] as the ultimate filter for taxonomic information as we used it to calculate the plant taxonomic coverage of our database.

For pollinators: (i) we first created a checklist of species names for the most representative pollinator groups at European level by combining the recently published checklists of bees [@ghisbain2023], syrphids [@kovcic2023] and butterflies [@wiemers2018]; (ii) then, we compared pollinator species names against the checklist and recovered some unmatched cases with restrictive fuzzy matching by using **stringdist** package [@van2014]; (iii) we programmatically fixed unmatched records when necessary and retrieved the taxonomic information for all species from GBIF; (iv) we fixed the non-found cases in the GBIF checklist and made sure that all species names from bees, syrphids and butterflies were named according to their respective species checklists.

## Taxonomic coverage 

To assess the completeness of plant and pollinator species in the SafeNet database at European level, we used the aforementioned checklists for plants and pollinators. Specifically for plants, we refined the checklist to include only European flowering plants and excluded taxonomic groups not associated with biotic pollination. We did this by first excluding the families considered to have exclusively a wind pollination mode [see @culley2002], and then by filtering out the genera with wind or non-biotic pollination from families that exhibit both biotic and non-biotic pollination modes. Additionally, we manually included some exotic species and added unresolved species names that were not present in the accepted names of the checklist at the current version of usage. For pollinators, we compared only the taxonomic coverage of bees, syrphids and butterflies by using their species checklists at European level.

## Habitat type and bioclimatic region

The different sites per study were classified with a habitat type by the authors. As these habitats are not standardized across studies, they were standardized with the additional help of land cover information and visual checks on current satellite imagery. For each georeferenced site, the land cover information was extracted from Corine Land Cover (CLC, version 2018) with the help of the Terra package [@hijmans2022]. Based on the habitat classification from the authors and the CLC classification, we created habitat categories that intend to summarize the diversity of habitats in the SafeNet database (see habitat type definition in supplementary material). These categories allow a quick comparison and understanding of the habitat types from the database. However, we advise authors to revise this classification if they intend to rely on this field for their analyses as this is a non-fully objective process. Moreover, Europe is characterized by a great variety of environmental conditions that harbor different biota. Thus, to allow authors to explore set of studies that share similar environmental conditions and species, we assigned to each site a biogeographical region. The biogeographical regions were downloaded from the European Environment Agency (version 2016) and were matched to the different sites with the help of a spatial joint from the **sf** package [@pebesma2018].




\newpage 

# 3 | RESULTS

## Taxonomy and taxonomic coverage

Provide number of species per taxonomic group and number of interactions
Something always of interest: provide % of interactions of _Apis mellifera_?

phylogenetic and geographical biases

```{r echo=FALSE, message=FALSE, cache=FALSE, warning=FALSE, out.width="95%", fig.width=10, fig.height=10, fig.cap= "\\textbf{Figure 2}. Phylogenetic representation of bee genera in the SafeNet database within the context of all European bee genera. The number of interactions recorded per genus in the database is illustrated using circles, with their sizes proportional to the number of interactions on a logarithmic scale. Additionally, a gradient of colors ranging from yellow to dark purple aids in this visualization. The coverage of species recorded in SafeNet per genus at the European level is depicted with orange and light grey bars, representing the percentage of species included and not included in the database, respectively, out of the total number of bee species per genus at the European level. Grey bars indicate the total number of species per genus at the European level."}

#Read data
tree_family_interactions= readRDS("../Data/Manuscript_info/bee_phylo.RData")
d1 = readRDS("../Data/Manuscript_info/bee_data.RData")
n = readRDS("../Data/Manuscript_info/node_data.RData")

#Circular layour
ggtree(tree_family_interactions, size=0.6, open.angle=1, alpha=1)+ 
geom_tippoint(aes(size= Interactions, fill = Interactions), color="black", shape=21) +
geom_tiplab(linetype='dashed', linesize=.05, offset = 0.063, size=2.9, fontface=1) +
scale_size(range = c(0,4.5), guide = 'none')  +
scale_fill_continuous(type = "viridis", direction=-1) + 
guides(fill=guide_legend(), size = guide_legend()) +
theme(legend.position = "bottom") +
new_scale_fill() +
geom_fruit(data = d1, geom=geom_bar,
                    mapping=aes(y=Genus1, x=Percent, fill = fam_group),
                    pwidth=0.13, 
                    orientation="y", 
                    stat="identity",
                    color="black",
                    offset = 0.137,
            axis.params=list(
                         axis = "x",
                         text.size  = 2.5,
                         hjust  = 1,
                         vjust = 0.5,
                         nbreak = 3,
                         fontface = 2
                     ),
         grid.params=list()) +
guides(fill = "none")+
scale_fill_manual(values = c(a = "tan2", b = "lightgrey"), guide = "none")+
geom_fruit(geom=geom_bar,
                    mapping=aes(y=label, x=Spp_number_Europe),
                    pwidth=0.12, 
                    orientation="y", 
                    stat="identity",
                    color="black",
                    offset = 0,
            axis.params=list(
                         axis = "x",
                         text.size  = 2.5,
                         hjust  = 1,
                         vjust = 0.5,
                         nbreak = 1,
                         fontface = 2
                     ),
         grid.params=list()) +
annotate("text", x = 14.2, y = 70, label = "SafeNet spp\n coverage (%)", size= 3, fontface= "bold") +
annotate("text", x = 15.7, y = 70, label = "European\n species", size= 3, fontface= "bold")+
annotate("text", x = 12.1, y = 70, label = "SafeNet\n interactions", size= 3, fontface= "bold")+ 
new_scale_fill() +
geom_hilight(data=n, aes(node=node), type = "roundrect", fill = "orange") +
annotate("text", x = 7.5, y = 2.8, label = "Melittidae", size= 3)+
annotate("text", x = 7, y = 6.5, label = "Andrenidae", size= 3)+
annotate("text", x = 9.5, y = 12.5, label = "Colletidae", size= 3)+
annotate("text", x = 5.9, y = 17.4, label = "Halictidae", size= 3)+
annotate("text", x = 2.8, y = 28.6, label = "Apidae", size= 3)+
annotate("text", x = 2.8, y = 51.3, label = "Megachilidae", size= 3) +
coord_cartesian(clip = "off")+
theme(legend.margin=unit(1,"cm"),
      legend.spacing = unit(1, "cm"),
      plot.margin = margin(4,0,4,0), 
      legend.position = c(0.6,0),
      legend.direction = "horizontal") 


```


```{r echo=FALSE, message=FALSE, cache=FALSE, warning=FALSE, out.width="95%", fig.cap= "\\textbf{Figure 3}. Phylogenetic representation of the plant families in the SafeNet database within the context of all flowering plant families occurring in Europe. The number of interactions recorded per genus in the database is illustrated using circles, with their sizes proportional to the number of interactions on a logarithmic scale. Additionally, a gradient of colors ranging from yellow to dark purple aids in this visualization. The coverage of species recorded in SafeNet per genus at the European level is depicted with orange and light grey bars, representing the percentage of species included and not included in the database, respectively, out of the total number of flowering plant species per family at the European level. Grey bars indicate the total number of species per family at the European level on logarithmic scale.", fig.width=8, fig.height=8}

library(ggplot2)
library(ggtree)
library(ggnewscale)
library(ggtreeExtra)
library(cowplot)


#Save data and plot it in an Rmarkdown
tree_family_interactions = readRDS("../Data/Manuscript_info/plant_phylo.RData")
d1 = readRDS("../Data/Manuscript_info/plant_coverage_phylo_RData")

#Check if there are differences in labels and order
ggtree(tree_family_interactions, layout="circular", size=0.15, open.angle=5, alpha=0.25) +
geom_tippoint(aes(size= Interactions, fill = Interactions), color="black", shape=21) +
geom_tiplab(linetype='dashed', linesize=.05, offset = -5, size=1.85, fontface=2, hjust=1) +
scale_size(range = c(0,4), guide = 'none') +
scale_fill_continuous(type = "viridis", direction=-1) + 
theme(legend.position = "bottom") +
guides(fill=guide_legend(), size = guide_legend()) +
new_scale_fill() +
geom_fruit(data = d1, geom=geom_bar,
   mapping=aes(y=label, x=Percent, fill = fam_group),
   pwidth=0.1, 
   orientation="y", 
   stat="identity",
   color="black",
   offset = 0.028,
   linewidth=0.35,
   axis.params=list(
     axis = "x",
     text.size  = 1.5,
     hjust  = 1,
     vjust = 0.5,
     nbreak = 3,
     fontface = 2),
  grid.params=list())+
guides(fill = "none")+
scale_fill_manual(values = c(A = "lightgrey", B = "tan2"), guide = "none") +
geom_fruit(geom=geom_bar,
    mapping=aes(y=label, x=log(Spp_Europe +1)),
    pwidth=0.1, 
    orientation="y", 
    stat="identity",
    color="black",
    offset = 0,
    linewidth=0.35) +
theme(legend.margin=unit(1,"cm"),
      legend.spacing = unit(1, "cm"),
      plot.margin = margin(4,0,4,0), 
      legend.position = c(0.5,0.09),
      legend.direction = "horizontal") 

```


\newpage

## Habitat type and bioclimatic region


```{r echo=FALSE, message=FALSE, cache=FALSE, warning=FALSE, out.width="95%", fig.cap= "\\textbf{Figure 4}. Proportion of the major pollinator orders by habitat types and bioclimatic regions in the SafeNet database. The orders, from left to right, include Hymenoptera, Diptera, Lepidoptera and Coleoptera. The horizontal barplot on the right indicates the number of studies that were conducted on each habitat type or bioclimatic region. Note that a single study can countribute to more than one habitat or bioclimatic region. Areas with a greater number of studies are more likely to depict accurate proportions of the different pollinator orders in those systems.", fig.width=4.5, fig.height=8, fig.align='center'}

#Load data (done it in earlier chunks)
#Select cols of interest
data1 = data %>% 
select(Study_id, Network_id, Authors_habitat,
  SafeNet_habitat, Bioregion,
  Latitude, Longitude, Day, Month, Year, Plant_rank,
  Plant_status, Plant_matchtype, Plant_accepted_name,Plant_order,
  Pollinator_rank, Pollinator_status, Pollinator_matchtype,
  Pollinator_accepted_name, Pollinator_order, Interaction)

#Prepare orders for filtering
main_orders = c("Hymenoptera", "Lepidoptera", "Coleoptera", "Diptera")

#Check number of studies by habitat
habitat = data %>% 
select(Study_id, SafeNet_habitat) %>% 
distinct() %>%  
group_by(SafeNet_habitat) %>% 
summarise(Habitat_count = n()) 
#Check number of studies by bioregion
bioregion = data %>% 
select(Study_id, Bioregion) %>% 
distinct() %>%  
group_by(Bioregion) %>% 
summarise(Bioregion_count = n()) 
#Check pols by habitat
pollinator_percent = data1 %>%
group_by(SafeNet_habitat, Pollinator_order) %>%
filter(Pollinator_accepted_name!= "Apis mellifera") %>% 
filter(Pollinator_order %in% main_orders) %>% 
summarise(count = n()) %>%
group_by(SafeNet_habitat) %>%
mutate(Proportion = count/sum(count)) %>%
select(-count) 
#Check pols by bioregion
pollinator_percent_bio = data1 %>%
group_by(Bioregion, Pollinator_order) %>%
filter(Pollinator_accepted_name!= "Apis mellifera") %>% 
filter(Pollinator_order %in% main_orders) %>% 
summarise(count = n()) %>%
group_by(Bioregion) %>%
mutate(Proportion = count/sum(count)) %>%
select(-count) 
#Preparing datasets for horizontal plot
a1 = habitat %>% 
mutate(Group = "Habitat") %>% 
rename(Habitat = SafeNet_habitat) %>% 
rename(Count = Habitat_count)

b1 = bioregion %>% 
mutate(Group = "Bioregion") %>% 
rename(Habitat = Bioregion) %>% 
rename(Count = Bioregion_count)

#Bind datasets
c1 = bind_rows(a1,b1)

#Create datasets and rename cols
a2 = pollinator_percent_bio %>% 
mutate(Group = "Bioregion") %>% 
rename(Habitat = Bioregion) 

b2 = pollinator_percent %>% 
mutate(Group = "Habitat") %>% 
rename(Habitat = SafeNet_habitat)
#Bind rows
c2 = bind_rows(a2, b2) 

#Prepare to set ordered labels
l2 = c2 %>% 
filter(Pollinator_order == "Hymenoptera") %>% 
arrange((Proportion)) %>% 
pull(Habitat)
#Set order of labels
c2$Habitat = factor(c2$Habitat, levels = l2)

#Set the right order of labels
c2$Pollinator_order = factor(c2$Pollinator_order, levels = c("Hymenoptera", "Diptera", "Lepidoptera", "Coleoptera"))


p1 = ggplot(c2, 
aes(fill=Pollinator_order, y=Proportion, x=Habitat)) + 
geom_bar(position = position_stack(reverse = TRUE), stat="identity")+
theme_bw() +
theme(legend.position = "bottom",
      plot.margin=unit(c(0,0,0,0), "mm"),
      legend.text = element_text(size=6),
      legend.key.size = unit(2, "mm"),
      legend.spacing.y = unit(0.1, "cm"),
       legend.box.spacing = unit(0, "pt"),
      axis.title = element_text(face = "bold", size = 8),
      axis.text = element_text(size=6),
      panel.border = element_rect(size=1)) +
xlab(NULL) +
scale_y_continuous(breaks = c(0.25, 0.5,0.75), labels = c("0.25", "0.5","0.75"))+
theme(strip.text.x = element_text(size = 12, face = "bold"),
    strip.background = element_rect(
color=NA, fill=NA, size=0.5, linetype="solid")) +
scale_fill_manual(values = viridis(4),
                  name = NULL) +
coord_flip(expand = FALSE) +
ggforce::facet_col(~ factor(Group, levels=c("Habitat","Bioregion")), space = "free", scales = "free_y") +
guides(fill=guide_legend(nrow=2,byrow=TRUE)) 

#Unify labels
c1$Habitat = factor(c1$Habitat, levels = l2)
#Create barplot on the side
p2 =ggplot(c1, aes(Habitat, Count)) +
geom_col(fill = "gray25",width = 0.9, color="black", linewidth = 0.4) +
theme_light() +
theme(plot.margin=unit(c(0,0,0,0), "mm"),
      axis.ticks.y = element_blank(), 
      axis.ticks.x = element_line(color="black"),
  axis.text.y = element_blank(), 
      strip.text.x = element_text(size=12),
      strip.background = element_rect(
color=NA, fill=NA, size=0.5, linetype="solid"),
  axis.title = element_text(face = "bold", size = 8),
axis.text = element_text(size=6)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),
panel.border = element_blank(),
axis.line = element_line(color = 'black'),
plot.margin = margin(0,0,0,0)) +
scale_y_continuous(breaks = c(0, 10,20), labels = c("0", "10","20"), limits = c(0,30))+
xlab(NULL) +
ylab("Number of studies")+
theme(legend.position = "none")+
coord_flip(expand = F) +
ggforce::facet_col(~ factor(Group, levels=c("Habitat","Bioregion")), space = "free", scales = "free_y")


#Plot panel
p1 + p2 + plot_layout(widths = c(4,2, 2.5),heights= c(10,10,4), ncol=2) 


```


**FIGURE 5?** CLIFFHANGER OF NETWORK METRICS


\newpage 

# 3 | DISCUSSION

Geographic and taxonomic biases!

Contextualise European diversity of plant and pollinator species with global biodiveristy

\newpage

# References

::: {#refs}
:::


# Acknowledgments

We thank all the taxonomist and ecologist that has made this database possible by contributing with their fieldwork data. This research was funded by the H2020 European project Safeguard (101003476).

# Author contributions

# Supplementary material

**Supplementary text 1**

Habitat definitions:

1) **Ruderal vegetation**: Plants growing on highly disturbed sites such as road sides or mineral extraction sites. 

2) **Agricultural margings**: Sides of crops that can include any type of vegetation from low growing plants to trees.

3) **Green urban areas**: Parks, private gardens or small pastures within an  urban setting. Botanical gardens are included in this category.

4) **Agricultural land**: Includes any type of crop and any type of vegetation growing within them. 

5) **Forest/woodland understory**: Any plant community sampled under a wooded group of plants. The forest could be embedded in an agricultural setting or in a fully natural scenario. We have included here agro-forestry areas and open to dense forest. Note that we have excluded from this category forest that contains sclerophyllous vegetation. 

6) **Semi-natural grassland**: Low growing plant community with relatively low disturbances but under low pressure such as seasonal mowing or extensive grazing.

7) **Pastures**: Any type of low growing plant community that is highly influenced by human disturbance. For instance, agriculture, mowing, moderate to high grazing or urban environments. Note that this category also includes old pastures with regrowth of woody vegetation.

8) **Sclerophyllous vegetation**: Any type of system with a dominant shrub community adapted to drought. Typical of the Mediterranean region. Note, that we have include in this category also woodlands (open coniferous forest) where the shrub community was the main focus of the study.

9) **Beaches, dunes, sands**: Plant communities growing on sandy soil.

10) **Riparian vegetation**: Plant communities growing on river margins. 

10) **Natural grassslands**: Low growing plant communities with little or none human disturbance. Often located in high elevation areas within Europe.

12) **Moors and heathland**: Low growing woody vegetation characteristic from low fertile soils near the coast or in alpine areas.


\newpage


```{r echo=FALSE, message=FALSE, cache=FALSE, warning=FALSE, out.width="105%", fig.cap= "\\textbf{Figure S1}. Coverage of the SafeNet species for bees (family level), syrphids (subfamily level) and butterflies (family level) in relation to the total number of European species within these taxonomic groups.", fig.width=10, fig.height=4}

#Prepare figure for supplementary material
#Coverage across high taxonomic ranks of bees, syrphids and butterflies
#--------------------------------------------------------------------------------------------#
#Start from bees----
#Bee families
bee_fam = c("Apidae", "Megachilidae", "Halictidae", 
            "Andrenidae", "Colletidae","Melittidae")


#Species per family within SafeNet
bee_spp_safenet = data %>% 
select(Pollinator_rank, Pollinator_accepted_name, Pollinator_order, Pollinator_family)%>%
filter(Pollinator_rank == "SPECIES") %>% 
filter(Pollinator_order == "Hymenoptera") %>% 
filter(!Pollinator_accepted_name == "Apis mellifera") %>% 
filter(Pollinator_family %in% bee_fam) %>% 
group_by(Pollinator_family) %>% 
summarise(Spp_number = n_distinct(Pollinator_accepted_name)) %>% 
mutate(Group = "SafeNet")
#Species per family within Europe
bee_spp_europe =  master_list %>% 
select(Family, Genus, Species, GenusAndSpecies) %>% 
filter(Family %in% bee_fam) %>% 
group_by(Family) %>% 
summarise(Spp_number = n_distinct(GenusAndSpecies)) %>% 
rename(Pollinator_family = Family) %>% 
mutate(Group = "Europe")

#Bind both datasets for plotting
bee_fam_coverage = bind_rows(bee_spp_safenet, bee_spp_europe)

p1 = ggplot(bee_fam_coverage, aes(reorder(Pollinator_family,-Spp_number), Spp_number, fill = Group)) +
geom_bar(stat="identity", width=.5, position = "dodge", color = "black") +
coord_cartesian(expand = FALSE) +
xlab(NULL) +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust =1),
      panel.border = element_rect(size=1)) +
ylab("Number of species") +
scale_fill_manual(values = c(viridis(2)))+
ggtitle("Bee family coverage")
#--------------------------------------------------------------------------------------------#
#Continue with syrphids----
#As we don't have subfamilies, let's obtained them from the master list
syrphids = master_list %>% 
filter(Family == "Syrphidae") %>% 
select(Family,Subfamily,  Genus, Species, GenusAndSpecies) %>% 
rename(Pollinator_accepted_name = GenusAndSpecies)
#Syrphid species safenet
syrphid_spp_safenet = data %>% 
select(Pollinator_rank, Pollinator_accepted_name, Pollinator_order, Pollinator_family)%>%
filter(Pollinator_rank == "SPECIES") %>% 
filter(Pollinator_family== "Syrphidae") %>% 
distinct()
#Add subfamily info
syrphid_spp_safenet = left_join(syrphid_spp_safenet, syrphids)
#Summarise spp per subfamily
syrphid_spp_safenet = syrphid_spp_safenet %>% 
group_by(Subfamily) %>% 
summarise(Spp_number = n_distinct(Pollinator_accepted_name)) %>% 
mutate(Group = "SafeNet")
#Get spp per subfamily at european level
syrphid_spp_europe = master_list %>% 
filter(Family == "Syrphidae") %>% 
select(Family, Subfamily, Genus, Species, GenusAndSpecies) %>% 
group_by(Subfamily) %>% 
summarise(Spp_number = n_distinct(GenusAndSpecies)) %>% 
mutate(Group = "Europe")
#Bind both datasets for plotting
syrphid_fam_coverage = bind_rows(syrphid_spp_safenet, syrphid_spp_europe)
#Plot
p2 = ggplot(syrphid_fam_coverage, aes(reorder(Subfamily,-Spp_number), Spp_number, fill = Group)) +
geom_bar(stat="identity", width=.5, position = "dodge", color = "black") +
coord_cartesian(expand = FALSE) +
xlab(NULL) +
ylab(NULL) +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust =1),
      panel.border = element_rect(size=1)) +
scale_fill_manual(values = c(viridis(2)))+
ggtitle("Syrphid subfamily coverage")
#--------------------------------------------------------------------------------------------#
#Continue with butterflies----
#Do it at family level
#Create vector with butterfly families
butt_fam = c(unique(master_list1$family))
#Species per family within SafeNet
butterfly_spp_safenet = data %>% 
select(Pollinator_rank, Pollinator_accepted_name, Pollinator_order, Pollinator_family)%>%
filter(Pollinator_rank == "SPECIES") %>% 
filter(Pollinator_order == "Lepidoptera") %>% 
filter(Pollinator_family %in% butt_fam) %>% 
group_by(Pollinator_family) %>% 
summarise(Spp_number = n_distinct(Pollinator_accepted_name)) %>% 
mutate(Group = "SafeNet")
#Species per family within Europe
butterfly_spp_europe =  master_list1 %>% 
select(family, genus, scientificName) %>% 
group_by(family) %>% 
summarise(Spp_number = n_distinct(scientificName)) %>% 
rename(Pollinator_family = family) %>% 
mutate(Group = "Europe")
#Bind both datasets for plotting
butterfly_fam_coverage = bind_rows(butterfly_spp_safenet, butterfly_spp_europe)
#Plot
p3 = ggplot(butterfly_fam_coverage, aes(reorder(Pollinator_family,-Spp_number), Spp_number, fill = Group)) +
geom_bar(stat="identity", width=.5, position = "dodge", color = "black") +
coord_cartesian(expand = FALSE) +
xlab(NULL) +
ylab(NULL) +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust =1),
      panel.border = element_rect(size=1)) +
scale_fill_manual(values = c(viridis(2)))+
ggtitle("Butterfly family coverage")

#--------------------------------------------------------------------------------------------#
p1+p2+p3 + plot_layout(guides = "collect") & 
theme(plot.title = element_text(size = 12, face = "bold"),
      axis.title.y = element_text(face = "bold"))


```

