---
title: "Mapping plant-pollinator interactions across Europe"
latex-tinytex: false
format:
  pdf:
    include-in-header: 
      text: |
        \usepackage{lscape}
        \newcommand{\blandscape}{\begin{landscape}}
        \newcommand{\elandscape}{\end{landscape}}
---

```{r Load libraries, echo=FALSE, message=FALSE, cache=FALSE, warning=FALSE}
library(dplyr) #For handling fata 
library(ggplot2) #For plotting
library(giscoR) #For plotting
library(sf) #For handling coordinates and plotting
library(patchwork)#For plotting
library(ggstar) #For plotting (cool shapes)
library(scales) #For plotting (decimals on axes)
```


```{r echo=FALSE, message=FALSE, cache=FALSE, warning=FALSE}
#Print number of countries
data = readRDS("../Data/Interactions_uncounted.rds")
#Country number
country_number = data %>% 
select(Country) %>% 
n_distinct()
#Study number
study_number = data %>% 
select(Study_id) %>% 
n_distinct()
#Average study number
studies_by_country = data %>% 
group_by(Country) %>% 
summarise(study_number = n_distinct(Study_id)) %>% 
summarise(mean(study_number)) %>% 
pull()
#Sampling method
Sampling_method = data %>% 
group_by(Study_id) %>% 
distinct(Sampling_method) %>%  
ungroup() %>% 
count(Sampling_method) %>% 
mutate(percent_method = n/sum(n) *100) %>% 
mutate(Sampling_method = recode_factor(Sampling_method, "Transect" = "transects"))
#1st most common sampling methodology
most_common_method = Sampling_method %>% 
filter(percent_method == max(percent_method)) 
#Minimum year
min_year = data %>% 
select(Year) %>% 
slice(which.min(Year)) %>% 
pull()
#Maximum year
max_year = data %>% 
select(Year) %>% 
slice(which.max(Year)) %>% 
pull()
#Number of interactions
interaction_number = nrow(data)
#Check number of accepted pollinators
pollinator_spp_number = data %>% 
select(Pollinator_rank, Pollinator_accepted_name)%>%
filter(Pollinator_rank == "SPECIES") %>% 
select(Pollinator_accepted_name) %>% 
n_distinct()
#Check number of plant species
plant_spp_number = data %>% 
select(Plant_rank, Plant_status, 
Plant_matchtype, Plant_accepted_name) %>% 
filter(Plant_rank == "SPECIES") %>% 
select(Plant_accepted_name) %>% 
n_distinct()


```


# Abstract

Pollinators play a crucial role in maintaining Earth's terrestrial biodiversity and human food production by mediating sexual reproduction for most flowering plants. However, their diversity and role as pollinators are increasingly compromised by rapid human-induced environmental changes. One of the major challenges for pollinator conservation, is the lack of robust generalisable data across space and time to comprehend the conservation status and population trends among different pollinator species. Here, we present a dataset of plant-pollinator interactions at European level that consists of `r study_number` studies distributed across `r country_number` countries that comprise over a million of interactions between plants and pollinators. The dataset includes a total of `r pollinator_spp_number` pollinator and `r plant_spp_number` plant species that accounts approximately for 30% of each of the main pollinator groups (i.e., bees, syrphids and butterflies) and 5% of flowering plants that inhabit the European continent.

# Introduction

1st paragraph

General introduction of how global change impacts plant-pollinator interactions

Maybe expand on some drivers? Climate change, habitat fragmentation, agricultural intensification, urbanization, pollution, pesticides and species' invasions

Highlight the relevance of large scale datasets

2nd paragraph

3rd paragraph

4paragraph

Introduce research questions

LIST THEM HERE (Main ideas so far)

Questions that we would like to answer:

1\) What are the most common plant a pollinator species? Are those shared across networks? Most common interactions across Europe? Interaction fidelity

2\) Is generalization the rule? Or specialization? How this impacts indirect interactions? Go in the direction of pollinator importance?

# Methods

## Dataset description

This European metaweb consist of datasets of plant-pollinator interactions compiled initially by a wide number of researchers and institutions within the European continent. This dataset consist of `r study_number` independent published and unpublished studies conducted during the time period `r min_year` - `r max_year` on `r country_number` different countries (mean studies by country = `r studies_by_country`). The dataset contains a total of `r prettyNum(interaction_number, big.mark=",")` distinct interactions, considering interaction as the contact of a given pollinator to the reproductive structure of a particular plant, from `r prettyNum(pollinator_spp_number, big.mark=",")` pollinator and `r prettyNum(plant_spp_number, big.mark=",")` plant species. These different studies differ in sampling effort and methodology, although most studies cover only a single year or flowering season (PERCENTAGE) with an average of XXX sampling days (range XXX to XXXX) over a time span of XXXX days, and documented interactions by using `r  most_common_method[[1]]` (`r  most_common_method[[3]]`%). 

Explain % of taxonomic ranks at order level that constitute the included pollinators. 


Shared species across studies (describe trend), added now in graph 1?


## Species coverage

To calculate the completeness of the dataset 



```{r echo=FALSE, message=FALSE, cache=FALSE, warning=FALSE, out.width="110%", fig.cap= "Figure 1"}

#Load data
data = readRDS("../Data/Interactions_uncounted.rds")

#Prepare coordinates
for_plotting = data %>% 
select(Study_id, Latitude, Longitude) %>% 
distinct()
#Get countries and transfrom coordinates
countries <- gisco_get_countries(
resolution = 20) %>%
st_transform(3035) %>% 
sf::st_as_sf(crs = 4326)

#Number of plant and poll species per network
#-----------------------#
#Pollinators------
#-----------------------#
#Check unique number of pollinator species
PollNumber_by_ID = data %>% 
select(Pollinator_rank, Pollinator_accepted_name, Study_id) %>% 
filter(Pollinator_rank == "SPECIES") %>% 
select(Pollinator_accepted_name, Study_id) %>% 
group_by(Study_id) %>% 
summarise(Pollinator_counts = n_distinct(Pollinator_accepted_name))
#Merge now with spp counts by network dataset
poll_data = left_join(PollNumber_by_ID, for_plotting, by = "Study_id")
#Create duplicate cord columns to operate on them
poll_data$coords <- data.frame(
Longitude = poll_data$Longitude, Latitude = poll_data$Latitude)
#Set coordinates
poll_data$coords_sf = st_as_sf(poll_data$coords, 
  coords = c("Longitude", "Latitude"), crs = 4326)
#Plot map of Europe
#Very noisy with many coordinates per point,
#Let's select a unique coordinate by study
poll_data1 =  poll_data %>% 
distinct(Study_id, .keep_all = TRUE)

#-----------------------#
#Plants-----
#-----------------------#
#Check unique number of plant species
PlantNumber_by_ID = data %>% 
select(Plant_rank, Plant_accepted_name, Study_id) %>% 
filter(Plant_rank == "SPECIES") %>% 
select(Plant_accepted_name, Study_id) %>% 
group_by(Study_id) %>% 
summarise(Plant_counts = n_distinct(Plant_accepted_name))
#Merge now with spp counts by network dataset
plant_data = left_join(PlantNumber_by_ID, for_plotting, by = "Study_id")
#Create duplicate cord columns to operate on them
plant_data$coords <- data.frame(
Longitude = plant_data$Longitude, Latitude = plant_data$Latitude)
#Set coordinates
plant_data$coords_sf = st_as_sf(plant_data$coords, 
  coords = c("Longitude", "Latitude"), crs = 4326)
#Plot map of Europe
#Very noisy with many coordinates per point,
#Let's select a unique coordinate by study
plant_data1 =  plant_data %>% 
distinct(Study_id, .keep_all = TRUE)

#Add vars
plant_data1$Group = "Plant"
poll_data1$Group = "Pollinator"
#Rename cols
plant_data2 = plant_data1 %>% 
rename(Counts = Plant_counts)
poll_data2 = poll_data1 %>% 
rename(Counts = Pollinator_counts)
#Bind rows
all_data = bind_rows(plant_data2, poll_data2)


#Try to plot both together (same plot)
map = ggplot(countries) +
geom_sf(fill="floralwhite",color = "black", 
        alpha = 1,linewidth=0.1) + 
geom_star(data = all_data, alpha=1,aes(x= Longitude, y=Latitude,
           size=Counts, starshape = Group, color= Group))+  
coord_sf(crs = st_crs(3035), default_crs = st_crs(4326),
         xlim = c(-14, 39), ylim = c(37, 70))+
theme(panel.grid.major = element_blank(), 
      legend.position = ("top"),
      legend.box = "vertical",
      legend.background = element_blank(),
      legend.box.background = element_blank(),
      legend.key = element_blank(), 
      legend.title = element_text(face ="bold",  size = 6),
      legend.box.spacing = unit(0.2, "cm"),
      legend.margin=margin(0,0,0,0),
        legend.box.margin=margin(-10,-10,-10,-10),
      axis.text = element_text(size=6,                  face="bold"),
      axis.title = element_text(face="bold", size = 8),
         legend.text = element_text(size = 6),                           legend.direction="horizontal",
         legend.spacing.y = unit(-0.3, "cm"),
      legend.title.align=0.5) +
theme(panel.background = element_rect(fill = "aliceblue"),
        panel.border = element_rect(colour = "black",
        fill=NA, size=1)) + 
 scale_size_continuous(name= "Species counts",range = c(0, 3.75))+
scale_color_manual(values=c("#009E73", "#D55E00"),
         guide="none") +
scale_starshape_manual(name = "Taxonomic group",             values = c(15, 7),
             guide=guide_legend(reverse=TRUE,
             override.aes=list(
                 size=2,
                 color=c("Pollinator"= "#D55E00","Plant"="#009E73")))) +
  ylab("Latitude") +
xlab("Longitude") +
scale_x_continuous(breaks = seq(0, 20, by = 10)) +
scale_y_continuous(breaks = seq(40, 60, by = 10)) +
guides(color = "none", size=guide_legend(nrow=1,override.aes = list(starshape =c(15,15, 15), size=c(0.8,1.8,2.8)))) + 
ggtitle("(a)") +
theme(plot.title = element_text(vjust = -12, hjust=0.1, size=10))


#----------------#
#Pollinators
#----------------#
#First select cols of rank, accepted name and study ID
#Then select unique levels by study ID
#Now sum levels (maximum can be as maximum number of studies)
poll_spread = data %>% 
select(Pollinator_rank, Pollinator_accepted_name, Study_id) %>% 
group_by(Study_id) %>% 
filter(Pollinator_rank == "SPECIES") %>% 
distinct(Pollinator_accepted_name) %>% 
ungroup() %>% 
count(Pollinator_accepted_name) %>% 
rename(n_studies_shared = n) %>% 
arrange(-n_studies_shared) %>% 
mutate(Percent_total = n_studies_shared / n_distinct(data$Study_id))
  
#Seelect quantile 50% from the total number of species
spp_number = poll_spread %>%  
select(Pollinator_accepted_name) %>% 
n_distinct()
df = seq(1, spp_number)
quantile_50 = quantile(df, 0.5)

#Obtain most common pollinator for plotting
most_common_poll = poll_spread %>% filter(n_studies_shared == max(n_studies_shared)) %>%
select(Pollinator_accepted_name) %>% pull() 

#Plot
p1 = ggplot(poll_spread, 
aes(reorder(Pollinator_accepted_name,-Percent_total), Percent_total)) +
geom_bar(stat = "identity", 
           color = "#D55E00",
           lwd = 0.015, fill = "#D55E00") +
ylab("Shared pollinators (%)") +
theme_minimal()+
theme(axis.text.x = element_blank(),
  axis.ticks.x=element_blank(),
  axis.ticks.y = element_line(size = 0.2),
  plot.title = element_text(size = 8, face = "bold"), 
  axis.text.y = element_text(size=6),
  panel.grid.major.x = element_blank(),
  panel.grid.minor.y = element_blank(),
  panel.grid.major.y = element_line(size=0.2, linetype =           2)) +
xlab(NULL) +
ylab(NULL) + 
ggtitle("Pollinators")+
geom_vline(xintercept = quantile_50, linetype="dashed", 
color = "black", size=0.25) + 
annotate(geom="text", x=1285, y=0.83, label="50th percentile",          color="black", size = 1.5) +
annotate(geom="text", x=20, y=0.88, label=most_common_poll[1],         color="black",  fontface = 'italic', size = 1.5)+
scale_y_continuous(breaks = seq(0, 0.75, by= 0.25), expand = c(0, 0)) + 
annotate(geom="text", x=-500, y=1.15, label="(b)",color="black", size = 3.5) +
coord_cartesian(xlim=c(0, nlevels(factor(poll_spread$Pollinator_accepted_name))),ylim=c(0, max(poll_spread$Percent_total)), clip="off")

#----------------#
#Plants
#----------------#
plant_spread = data %>% 
select(Plant_rank, Plant_accepted_name, Study_id) %>% 
group_by(Study_id) %>% 
filter(Plant_rank == "SPECIES") %>% 
distinct(Plant_accepted_name) %>% 
ungroup() %>% 
count(Plant_accepted_name) %>% 
rename(n_studies_shared = n) %>% 
arrange(-n_studies_shared) %>% 
mutate(Percent_total = n_studies_shared / n_distinct(data$Study_id))
  
#Seelect quantile 50% from the total number of species
spp_number = plant_spread %>%  
select(Plant_accepted_name) %>% 
n_distinct()
df = seq(1, spp_number)
quantile_50 = quantile(df, 0.5)

#Obtain most common plant for plotting
most_common_plant = plant_spread %>% filter(n_studies_shared == max(n_studies_shared)) %>%
select(Plant_accepted_name) %>% pull() 

#Plot
p2 = ggplot(plant_spread, 
aes(reorder(Plant_accepted_name,-Percent_total), Percent_total, fill = Plant_accepted_name)) +
geom_bar(stat = "identity", 
           color = "#009E73",
           lwd = 0.015, fill = "#009E73") +
ylab("Shared plants (%)") +
theme_minimal()+
theme(axis.text.x = element_blank(),
         axis.ticks.x=element_blank(),
         axis.ticks.y = element_line(size = 0.2),
         axis.title.x = element_text(face = "bold", size = 8),            plot.title = element_text(size = 8, face = "bold"),
         axis.text.y = element_text(size=6),
         panel.grid.major.x = element_blank(),
         panel.grid.minor.y = element_blank(),
         panel.grid.major.y = element_line(size=0.2, linetype =           2)) +
xlab("Species") +
ylab(NULL) + 
ggtitle("Plants") + 
geom_vline(xintercept = quantile_50, linetype="dashed", 
          color = "black", size=0.25) + 
annotate(geom="text", x=835, y=0.7, label="50th percentile",color="black", size = 1.5) + 
annotate(geom="text", x=20, y=0.75, label=most_common_plant[1]
      ,color="black",  fontface = 'italic', size = 1.5)+
annotate(geom="text", x=20, y=-0.08, label="Common spp."
      ,color="black",  size = 1.5) +
annotate(geom="text", x=1200, y=-0.08, label="\'Rare\' spp."
      ,color="black",  size = 1.5) + 
scale_y_continuous(breaks = seq(0, 0.6, by= 0.2), expand = c(0, 0), labels = label_number(accuracy = 0.01)) +
coord_cartesian(xlim=c(0, nlevels(factor(plant_spread$Plant_accepted_name))),ylim=c(0, max(plant_spread$Percent_total)), clip="off")

#Prepare panel with plots
plot2 =  wrap_elements(p1 / p2) +  labs(tag ="Occurrence across studies (%)") + 
theme(plot.tag = element_text(size = 7, angle = 90, face = "bold", vjust = -3.5), plot.tag.position = "left")
#Plot everything
map + plot_spacer() + plot2 + plot_layout(widths = c(2.1, -0.45, 1)) 

```


# Results

# Discussion
