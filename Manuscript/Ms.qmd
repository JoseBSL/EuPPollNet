---
title: "Mapping plant-pollinator interactions across Europe"
latex-tinytex: false
format:
  pdf:
    include-in-header: 
      text: |
        \usepackage{lscape}
        \newcommand{\blandscape}{\begin{landscape}}
        \newcommand{\elandscape}{\end{landscape}}
        \usepackage{caption}
        \captionsetup[figure]{labelformat=empty}
bibliography: references.bib
---

```{r Load libraries, echo=FALSE, message=FALSE, cache=FALSE, warning=FALSE}
library(dplyr) #For handling fata 
library(ggplot2) #For plotting
library(giscoR) #For plotting
library(sf) #For handling coordinates and plotting
library(patchwork)#For plotting
library(ggstar) #For plotting (cool shapes)
library(scales) #For plotting (decimals on axes)
library(lubridate) #To operate with dates
library(tidyr) #Reshape data (wide format)
library(stringr) #Fix/modify strings
library(forcats)

```

```{r echo=FALSE, message=FALSE, cache=FALSE, warning=FALSE}
#Print number of countries
data = readRDS("../Data/3_Final_data/Interactions_uncounted.rds")
#Country number
country_number = data %>% 
select(Country) %>% 
n_distinct()
#Study number
study_number = data %>% 
select(Study_id) %>% 
n_distinct()
#Average study number
studies_by_country = data %>% 
group_by(Country) %>% 
summarise(study_number = n_distinct(Study_id)) %>% 
summarise(mean(study_number)) %>% 
pull()
#$\bar{x}_\frac{studies}{country}$ = `r studies_by_country`
#Sampling method
Sampling_method = data %>% 
group_by(Study_id) %>% 
distinct(Sampling_method) %>%  
ungroup() %>% 
count(Sampling_method) %>% 
mutate(percent_method = n/sum(n) *100) %>% 
mutate(Sampling_method = recode_factor(Sampling_method, "Transect" = "transects"))
#1st most common sampling methodology
most_common_method = Sampling_method %>% 
filter(percent_method == max(percent_method)) 
#Minimum year
min_year = data %>% 
select(Year) %>% 
slice(which.min(Year)) %>% 
pull()
#Maximum year
max_year = data %>% 
select(Year) %>% 
slice(which.max(Year)) %>% 
pull()
#Number of interactions
interaction_number = nrow(data)
#Check number of accepted pollinators
pollinator_spp_number = data %>% 
select(Pollinator_rank, Pollinator_accepted_name)%>%
filter(Pollinator_rank == "SPECIES") %>% 
select(Pollinator_accepted_name) %>% 
n_distinct()
#Check number of plant species
plant_spp_number = data %>% 
select(Plant_rank, Plant_status, 
Plant_matchtype, Plant_accepted_name) %>% 
filter(Plant_rank == "SPECIES") %>% 
select(Plant_accepted_name) %>% 
n_distinct()
#Extract percentage of studies conducted during a single year
dates = data %>% 
select(Study_id, Network_id,Sampling_method, Day, Month, Year) %>% 
mutate(Date = dmy(paste(Day, Month, Year, sep = "-"))) %>% 
group_by(Study_id) %>% 
summarise(Count = n_distinct(Year))
#Filter studies with only one year
one_year = dates %>% 
filter(Count == 1) %>% 
pull() %>% 
length() / nrow(dates) * 100
#Obtain date information
dates = data %>% 
select(Study_id, Network_id,Sampling_method, Day, Month, Year) %>% 
mutate(Date = dmy(paste(Day, Month, Year, sep = "-")))

dates1 = dates %>% 
group_by(Study_id, Network_id, Sampling_method) %>% 
summarise(Min_date = min(Date), 
          Max_date= max(Date), 
          Sampling_days = n_distinct(Date)) %>% 
mutate(Sampling_period = as.numeric(Max_date - Min_date)) %>% 
mutate(Study_number = as.integer(str_extract(Study_id, "[^_]+")), 
       .before=Study_id) %>% 
arrange(Study_number) %>% 
mutate(Sampling_period = case_when(!is.na(Sampling_period) ~ Sampling_period + 1,
TRUE ~ NA)) %>% 
mutate(Sampling_days = case_when(!is.na(Sampling_period) ~ Sampling_days,
TRUE ~ NA))
#Extract min and max number of sampling days
min_sampling_day = dates1 %>% pull(Sampling_days) %>% min(na.rm = TRUE)
max_sampling_day = dates1 %>% pull(Sampling_days) %>% max(na.rm = TRUE)
#Extract average of sampling days across networks and studies
average_sampling_days = dates1 %>% 
ungroup() %>% 
group_by(Study_id) %>% 
summarise(mean_sampling_days = mean(Sampling_days, na.rm = TRUE)) %>% 
ungroup() %>% 
summarise(mean(mean_sampling_days, na.rm = TRUE)) %>% 
pull()
```

# Abstract

Pollinators play a crucial role in maintaining Earth's terrestrial biodiversity and human food production by mediating sexual reproduction for most flowering plants. However, their diversity and role as pollinators are increasingly compromised by rapid human-induced environmental changes. One of the major challenges for pollinator conservation, is the lack of robust generalisable data across space and time to comprehend the conservation status and population trends among different pollinator species. Here, we present a dataset of plant-pollinator interactions at European level that consists of `r study_number` studies distributed across `r country_number` countries that comprise over a million of interactions between plants and pollinators. The dataset includes a total of `r pollinator_spp_number` pollinator and `r plant_spp_number` plant species that accounts approximately for 30% of each of the main pollinator groups (i.e., bees, syrphids and butterflies) and 5% of flowering plants that inhabit the European continent.

# Introduction

1st paragraph

General introduction of how global change impacts plant-pollinator interactions

Maybe expand on some drivers? Climate change, habitat fragmentation, agricultural intensification, urbanization, pollution, pesticides and species' invasions

Highlight the relevance of large scale datasets to understand biological phenomena

2nd paragraph

3rd paragraph

4paragraph

Introduce research questions

LIST THEM HERE (Main ideas so far)

Questions that we would like to answer:

1\) What are the most common plant a pollinator species? Are those shared across networks? Most common interactions across Europe? Interaction fidelity

2\) Is generalization the rule? Or specialization? How this impacts indirect interactions? Go in the direction of pollinator importance?

\newpage

# Methods

## Dataset description

This European metaweb consist of datasets of plant-pollinator interactions compiled initially by a wide number of researchers and institutions within the European continent. This dataset consist of `r study_number` independent published and unpublished studies conducted during the time period `r min_year` - `r max_year` on `r country_number` different countries (**Figure 1a**). The dataset contains a total of `r prettyNum(interaction_number, big.mark=",")` distinct interactions, considering interaction as the contact of a given pollinator to the reproductive structure of a particular plant, from `r prettyNum(pollinator_spp_number, big.mark=",")` pollinator and `r prettyNum(plant_spp_number, big.mark=",")` plant species. The majority of plant and pollinator species tend to be regionally specific, with only a minor portion of them being shared across a broad range of studies (**Figure 1b**). These different studies differ in sampling effort and methodology, although most studies took place within a single flowering season (`r format(round(one_year, 2), nsmall = 2)`%), sampled a given location an average of `r format(round(average_sampling_days, 2), nsmall=2)` days, and documented interactions mostly by using `r  most_common_method[[1]]` as sampling method (`r format(round(most_common_method[[3]], 2), nsmall = 2)`%).


```{r echo=FALSE, message=FALSE, cache=FALSE, warning=FALSE, out.width="110%", fig.cap= "\\textbf{Figure 1}. (\\textbf{a}) Approximate locations of the studies of the SafeNet database showing the total number of pollinator (i.e., orange heptagon) and plant (i.e., green circles) species per study. The sizes of these shapes are proportional to the respective species counts. For visualization purposes, we have focused only on the European region with studies and selected a single location per study. (\\textbf{b}) Percentage of shared occurrences of pollinators and plants across studies. Species on the left are highly shared across studies, while species on the right are found only in a few or a single study. As a reference, we have indicated the 50th percentile with a black dashed vertical line."}

#Load data (done it in previous chunk)

#Prepare coordinates
for_plotting = data %>% 
select(Study_id, Latitude, Longitude) %>% 
distinct()
#Get countries and transfrom coordinates
countries <- gisco_get_countries(
resolution = 20) %>%
st_transform(3035) %>% 
sf::st_as_sf(crs = 4326)

#Number of plant and poll species per network
#-----------------------#
#Pollinators------
#-----------------------#
#Check unique number of pollinator species
PollNumber_by_ID = data %>% 
select(Pollinator_rank, Pollinator_accepted_name, Study_id) %>% 
filter(Pollinator_rank == "SPECIES") %>% 
select(Pollinator_accepted_name, Study_id) %>% 
group_by(Study_id) %>% 
summarise(Pollinator_counts = n_distinct(Pollinator_accepted_name))
#Merge now with spp counts by network dataset
poll_data = left_join(PollNumber_by_ID, for_plotting, by = "Study_id")
#Create duplicate cord columns to operate on them
poll_data$coords <- data.frame(
Longitude = poll_data$Longitude, Latitude = poll_data$Latitude)
#Set coordinates
poll_data$coords_sf = st_as_sf(poll_data$coords, 
  coords = c("Longitude", "Latitude"), crs = 4326)
#Plot map of Europe
#Very noisy with many coordinates per point,
#Let's select a unique coordinate by study
poll_data1 =  poll_data %>% 
distinct(Study_id, .keep_all = TRUE)

#-----------------------#
#Plants-----
#-----------------------#
#Check unique number of plant species
PlantNumber_by_ID = data %>% 
select(Plant_rank, Plant_accepted_name, Study_id) %>% 
filter(Plant_rank == "SPECIES") %>% 
select(Plant_accepted_name, Study_id) %>% 
group_by(Study_id) %>% 
summarise(Plant_counts = n_distinct(Plant_accepted_name))
#Merge now with spp counts by network dataset
plant_data = left_join(PlantNumber_by_ID, for_plotting, by = "Study_id")
#Create duplicate cord columns to operate on them
plant_data$coords <- data.frame(
Longitude = plant_data$Longitude, Latitude = plant_data$Latitude)
#Set coordinates
plant_data$coords_sf = st_as_sf(plant_data$coords, 
  coords = c("Longitude", "Latitude"), crs = 4326)
#Plot map of Europe
#Very noisy with many coordinates per point,
#Let's select a unique coordinate by study
plant_data1 =  plant_data %>% 
distinct(Study_id, .keep_all = TRUE)

#Add vars
plant_data1$Group = "Plant"
poll_data1$Group = "Pollinator"
#Rename cols
plant_data2 = plant_data1 %>% 
rename(Counts = Plant_counts)
poll_data2 = poll_data1 %>% 
rename(Counts = Pollinator_counts)
#Bind rows
all_data = bind_rows(plant_data2, poll_data2)


#Try to plot both together (same plot)
map = ggplot(countries) +
geom_sf(fill="floralwhite",color = "black", 
        alpha = 1,linewidth=0.01) + 
geom_star(data = all_data, alpha=1,aes(x= Longitude, y=Latitude,
           size=Counts, starshape = Group, color= Group))+  
coord_sf(crs = st_crs(3035), default_crs = st_crs(4326),
         xlim = c(-14, 39), ylim = c(37, 70))+
theme(panel.grid.major = element_blank(), 
      legend.position = ("top"),
      legend.box = "vertical",
      legend.background = element_blank(),
      legend.box.background = element_blank(),
      legend.key = element_blank(), 
      legend.title = element_text(face ="bold",  size = 6),
      legend.box.spacing = unit(0.2, "cm"),
      legend.margin=margin(0,0,0,0),
        legend.box.margin=margin(-10,-10,-10,-10),
      axis.text = element_text(size=6,                  face="bold"),
      axis.title = element_text(face="bold", size = 8),
         legend.text = element_text(size = 6),                           legend.direction="horizontal",
         legend.spacing.y = unit(-0.3, "cm"),
      legend.title.align=0.5) +
theme(panel.background = element_rect(fill = "aliceblue"),
        panel.border = element_rect(colour = "black",
        fill=NA, size=1)) + 
 scale_size_continuous(name= "Species counts",range = c(0, 3.75))+
scale_color_manual(values=c("#009E73", "#D55E00"),
         guide="none") +
scale_starshape_manual(name = "Taxonomic group",             values = c(15, 7),
             guide=guide_legend(reverse=TRUE,
             override.aes=list(
                 size=2,
                 color=c("Pollinator"= "#D55E00","Plant"="#009E73")))) +
  ylab("Latitude") +
xlab("Longitude") +
scale_x_continuous(breaks = seq(0, 20, by = 10)) +
scale_y_continuous(breaks = seq(40, 60, by = 10)) +
guides(color = "none", size=guide_legend(nrow=1,override.aes = list(starshape =c(15,15, 15), size=c(0.8,1.8,2.8)))) + 
ggtitle("(a)") +
theme(plot.title = element_text(vjust = -12, hjust=0.1, size=10))


#----------------#
#Pollinators
#----------------#
#First select cols of rank, accepted name and study ID
#Then select unique levels by study ID
#Now sum levels (maximum can be as maximum number of studies)
poll_spread = data %>% 
select(Pollinator_rank, Pollinator_accepted_name, Study_id) %>% 
group_by(Study_id) %>% 
filter(Pollinator_rank == "SPECIES") %>% 
distinct(Pollinator_accepted_name) %>% 
ungroup() %>% 
count(Pollinator_accepted_name) %>% 
rename(n_studies_shared = n) %>% 
arrange(-n_studies_shared) %>% 
mutate(Percent_total = n_studies_shared / n_distinct(data$Study_id))
  
#Seelect quantile 50% from the total number of species
spp_number = poll_spread %>%  
select(Pollinator_accepted_name) %>% 
n_distinct()
df = seq(1, spp_number)
quantile_50 = quantile(df, 0.5)

#Obtain most common pollinator for plotting
most_common_poll = poll_spread %>% filter(n_studies_shared == max(n_studies_shared)) %>%
select(Pollinator_accepted_name) %>% pull() 

#Plot
p1 = ggplot(poll_spread, 
aes(reorder(Pollinator_accepted_name,-Percent_total), Percent_total)) +
geom_bar(stat = "identity", 
           color = "#D55E00",
           lwd = 0.015, fill = "#D55E00") +
ylab("Shared pollinators (%)") +
theme_minimal()+
theme(axis.text.x = element_blank(),
  axis.ticks.x=element_blank(),
  axis.ticks.y = element_line(size = 0.2),
  plot.title = element_text(size = 8, face = "bold"), 
  axis.text.y = element_text(size=6),
  panel.grid.major.x = element_blank(),
  panel.grid.minor.y = element_blank(),
  panel.grid.major.y = element_line(size=0.2, linetype =           2)) +
xlab(NULL) +
ylab(NULL) + 
ggtitle("Pollinators")+
geom_vline(xintercept = quantile_50, linetype="dashed", 
color = "black", size=0.25) + 
annotate(geom="text", x=1285, y=0.83, label="50th percentile",          color="black", size = 1.5) +
annotate(geom="text", x=20, y=0.89, label=most_common_poll[1],         color="black",  fontface = 'italic', size = 1.5)+
scale_y_continuous(breaks = seq(0, 0.75, by= 0.25), expand = c(0, 0)) + 
annotate(geom="text", x=-500, y=1.15, label="(b)",color="black", size = 3.5) +
coord_cartesian(xlim=c(0, nlevels(factor(poll_spread$Pollinator_accepted_name))),ylim=c(0, max(poll_spread$Percent_total)), clip="off")

#----------------#
#Plants
#----------------#
plant_spread = data %>% 
select(Plant_rank, Plant_accepted_name, Study_id) %>% 
group_by(Study_id) %>% 
filter(Plant_rank == "SPECIES") %>% 
distinct(Plant_accepted_name) %>% 
ungroup() %>% 
count(Plant_accepted_name) %>% 
rename(n_studies_shared = n) %>% 
arrange(-n_studies_shared) %>% 
mutate(Percent_total = n_studies_shared / n_distinct(data$Study_id))
  
#Seelect quantile 50% from the total number of species
spp_number = plant_spread %>%  
select(Plant_accepted_name) %>% 
n_distinct()
df = seq(1, spp_number)
quantile_50 = quantile(df, 0.5)

#Obtain most common plant for plotting
most_common_plant = plant_spread %>% filter(n_studies_shared == max(n_studies_shared)) %>%
select(Plant_accepted_name) %>% pull() 

#Plot
p2 = ggplot(plant_spread, 
aes(reorder(Plant_accepted_name,-Percent_total), Percent_total, fill = Plant_accepted_name)) +
geom_bar(stat = "identity", 
           color = "#009E73",
           lwd = 0.015, fill = "#009E73") +
ylab("Shared plants (%)") +
theme_minimal()+
theme(axis.text.x = element_blank(),
         axis.ticks.x=element_blank(),
         axis.ticks.y = element_line(size = 0.2),
         axis.title.x = element_text(face = "bold", size = 8),            plot.title = element_text(size = 8, face = "bold"),
         axis.text.y = element_text(size=6),
         panel.grid.major.x = element_blank(),
         panel.grid.minor.y = element_blank(),
         panel.grid.major.y = element_line(size=0.2, linetype =           2)) +
xlab("Species") +
ylab(NULL) + 
ggtitle("Plants") + 
geom_vline(xintercept = quantile_50, linetype="dashed", 
          color = "black", size=0.25) + 
annotate(geom="text", x=835, y=0.7, label="50th percentile",color="black", size = 1.5) + 
annotate(geom="text", x=20, y=0.73, label=most_common_plant[1]
      ,color="black",  fontface = 'italic', size = 1.5)+
annotate(geom="text", x=20, y=-0.08, label="Common spp."
      ,color="black",  size = 1.5) +
annotate(geom="text", x=1200, y=-0.08, label="\'Rare\' spp."
      ,color="black",  size = 1.5) + 
scale_y_continuous(breaks = seq(0, 0.6, by= 0.2), expand = c(0, 0), labels = label_number(accuracy = 0.01)) +
coord_cartesian(xlim=c(0, nlevels(factor(plant_spread$Plant_accepted_name))),ylim=c(0, max(plant_spread$Percent_total)), clip="off")

#Prepare panel with plots
plot2 =  wrap_elements(p1 / p2) +  labs(tag ="Occurrence across studies (%)") + 
theme(plot.tag = element_text(size = 7, angle = 90, face = "bold", vjust = -3.5), plot.tag.position = "left")
#Plot everything
map + plot_spacer() + plot2 + plot_layout(widths = c(2.1, -0.45, 1)) 

```


## Taxonomic harmonization

All plant and pollinator species names were checked and standardized according to large scale taxonomic databases. To ensure reproducibility of the workflow, we have conducted this harmonization in R with **rgbif** [@chamberlain2022] as pivotal package to check for species names and retrieve further taxonomic information (i.e., phylum, order, family and genus) from the Global Biodiversity Information Facility (GBIF). The protocol for plants and pollinators is similar but slightly different given the availability of the different taxonomic resources. For transparency, we have included in the database the old species name, the new assigned name, and, if the species name is uncertain (e.g., species complex or species alike).

For plants: (i) we initially verify exact matches with the GBIF species checklist; (ii) select unmatched cases and fix orthographic errors; (iii) retrieve again taxonomic information for those unmatched cases, evaluate accuracy of fuzzing matching and programmatically fix records that are still not found; (iv) finally, we used the World Flora Taxonomic Backbone [@govaerts2021\; WFO, July 7, 2022] as the ultimate filter for taxonomic information as we used it to calculate the plant taxonomic coverage of our database.

For pollinators: (i) we first created a checklist of species names for the most representative pollinator groups at European level by combining the recently published checklists of bees [@ghisbain2023], syrphids [@kovcic2023] and butterflies [@wiemers2018]; (ii) then, we compared pollinator species names against the checklist and recovered some unmatched cases with restrictive fuzzy matching by using **stringdist** package [@van2014]; (iii) we programmatically fixed unmatched records when necessary and retrieved the taxonomic information for all species from GBIF; (iv) we fixed the non-found cases in the GBIF checklist and made sure that all species names from bees, syrphids and butterflies were named according to their respective species checklists.

## Taxonomic coverage 

To assess the completeness of plant and pollinator species in the SafeNet database at European level, we used the aforementioned checklists for plants and pollinators. Specifically for plants, we refined the checklist to include only European flowering plants and excluded taxonomic groups not associated with biotic pollination. We did this by first excluding the families considered to have exclusively a wind pollination mode [see @culley2002], and then by filtering out the genera with wind or non-biotic pollination from families that exhibit both biotic and non-biotic pollination modes. Additionally, we manually included some exotic species and added unresolved species names that were not present in the accepted names of the checklist at the current version of usage. For pollinators, we compared only the taxonomic coverage of bees, syrphids and butterflies by using their species checklists at European level.

## Habitat type and bioclimatic region

The different sites per study were classified with a habitat type by the authors. As these habitats are not standardized across studies, they were standardized with the additional help of land cover information and visual checks on current satellite imagery. For each georeferenced site, the land cover information was extracted from Corine Land Cover (CLC, version 2018) with the help of the Terra package [@hijmans2022]. Based on the habitat classification from the authors and the CLC classification, we created habitat categories that intend to summarize the diversity of habitats in the SafeNet database (see habitat type definition in supplementary material). These categories allow a quick comparison and understanding of the habitat types from the database. However, we advise authors to revise this classification if they intend to rely on this field for their analyses as this is a non-fully objective process. Moreover, Europe is characterized by a great variety of environmental conditions that harbor different biota. Thus, to allow authors to explore set of studies that share similar environmental conditions and species, we assigned to each site a biogeographical region. The biogeographical regions were downloaded from the European Environment Agency (version 2016) and were matched to the different sites with the help of a spatial joint from the **sf** package [@pebesma2018].




```{r echo=FALSE, message=FALSE, cache=FALSE, warning=FALSE, out.width="95%", fig.cap= "\\textbf{Figure 2}. Proportion of the major pollinator orders by habitat types and bioclimatic regions in the SafeNet database. The orders, from left to right, include Hymenoptera, Diptera, Lepidoptera and Coleoptera. The horizontal barplot on the right indicates the number of studies that were conducted on each habitat type or bioclimatic region. Note that a single study can countribute to more than one habitat or bioclimatic region. Areas with a greater number of studies are more likely to depict accurate proportions of pollinators in those systems.", fig.width=6, fig.height=8}


#Read interaction data 
data = readRDS("../Data/3_Final_data/Interactions_uncounted.rds")
#Load data (done it in earlier chunks)
#Select cols of interest
data1 = data %>% 
select(Study_id, Network_id, Authors_habitat,
  Corine_land_cover, SafeNet_habitat, Bioregion,
  Latitude, Longitude, Day, Month, Year, Plant_rank,
  Plant_status, Plant_matchtype, Plant_accepted_name,Plant_order,
  Pollinator_rank, Pollinator_status, Pollinator_matchtype,
  Pollinator_accepted_name, Pollinator_order, Interaction)

#Prepare orders for filtering
main_orders = c("Hymenoptera", "Lepidoptera", "Coleoptera", "Diptera")

#Check number of studies by habitat
habitat = data %>% 
select(Study_id, SafeNet_habitat) %>% 
distinct() %>%  
group_by(SafeNet_habitat) %>% 
summarise(Habitat_count = n()) 
#Check number of studies by bioregion
bioregion = data %>% 
select(Study_id, Bioregion) %>% 
distinct() %>%  
group_by(Bioregion) %>% 
summarise(Bioregion_count = n()) 
#Check pols by habitat
pollinator_percent = data1 %>%
group_by(SafeNet_habitat, Pollinator_order) %>%
filter(Pollinator_accepted_name!= "Apis mellifera") %>% 
filter(Pollinator_order %in% main_orders) %>% 
summarise(count = n()) %>%
group_by(SafeNet_habitat) %>%
mutate(Proportion = count/sum(count)) %>%
select(-count) 
#Check pols by bioregion
pollinator_percent_bio = data1 %>%
group_by(Bioregion, Pollinator_order) %>%
filter(Pollinator_accepted_name!= "Apis mellifera") %>% 
filter(Pollinator_order %in% main_orders) %>% 
summarise(count = n()) %>%
group_by(Bioregion) %>%
mutate(Proportion = count/sum(count)) %>%
select(-count) 
#Preparing datasets for horizontal plot
a1 = habitat %>% 
mutate(Group = "Habitat") %>% 
rename(Habitat = SafeNet_habitat) %>% 
rename(Count = Habitat_count)

b1 = bioregion %>% 
mutate(Group = "Bioregion") %>% 
rename(Habitat = Bioregion) %>% 
rename(Count = Bioregion_count)

#Bind datasets
c1 = bind_rows(a1,b1)

#Create datasets and rename cols
a2 = pollinator_percent_bio %>% 
mutate(Group = "Bioregion") %>% 
rename(Habitat = Bioregion) 

b2 = pollinator_percent %>% 
mutate(Group = "Habitat") %>% 
rename(Habitat = SafeNet_habitat)
#Bind rows
c2 = bind_rows(a2, b2) 

#Prepare to set ordered labels
l2 = c2 %>% 
filter(Pollinator_order == "Hymenoptera") %>% 
arrange((Proportion)) %>% 
pull(Habitat)
#Set order of labels
c2$Habitat = factor(c2$Habitat, levels = l2)

#Set the right order of labels
c2$Pollinator_order = factor(c2$Pollinator_order, levels = c("Hymenoptera", "Diptera", "Lepidoptera", "Coleoptera"))


p1 = ggplot(c2, 
aes(fill=Pollinator_order, y=Proportion, x=Habitat)) + 
geom_bar(position = position_stack(reverse = TRUE), stat="identity")+
theme_bw() +
theme(legend.position = "bottom",
      plot.margin=unit(c(0,0,0,0), "mm"),
      legend.text = element_text(size=6),
      legend.key.size = unit(2, "mm"),
      legend.spacing.y = unit(0.1, "cm"),
       legend.box.spacing = unit(0, "pt"),
      axis.title = element_text(face = "bold", size = 8),
      axis.text = element_text(size=6)) +
xlab(NULL) +
scale_y_continuous(breaks = c(0.25, 0.5,0.75), labels = c("0.25", "0.5","0.75"))+
theme(strip.text.x = element_text(size = 12, face = "bold"),
    strip.background = element_rect(
color=NA, fill=NA, size=0.5, linetype="solid")) +
scale_fill_manual(values = c("#ffd67a","skyblue", "lightpink2", "tomato3"),
                  name = NULL) +
coord_flip(expand = FALSE) +
ggforce::facet_col(~ factor(Group, levels=c("Habitat","Bioregion")), space = "free", scales = "free_y") +
guides(fill=guide_legend(nrow=2,byrow=TRUE)) +
ggtitle("(a)") +
theme(plot.title = element_text(size = 14 ,hjust = -0.25, vjust = -2.5))

#Unify labels
c1$Habitat = factor(c1$Habitat, levels = l2)
#Create barplot on the side
p2 =ggplot(c1, aes(Habitat, Count)) +
geom_col(fill = "black",width = 0.9) +
theme_light() +
theme(plot.margin=unit(c(0,0,0,0), "mm"),
      axis.ticks.y = element_blank(), 
  axis.text.y = element_blank(), 
      strip.text.x = element_text(size=12),
      strip.background = element_rect(
color=NA, fill=NA, size=0.5, linetype="solid"),
  axis.title = element_text(face = "bold", size = 8),
axis.text = element_text(size=6)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),
panel.border = element_blank(),
axis.line = element_line(color = 'black')) +
scale_y_continuous(breaks = c(0, 10,20), labels = c("0", "10","20"), limits = c(0,30))+
xlab(NULL) +
ylab("Number of studies")+
theme(legend.position = "none")+
coord_flip(expand = F) +
ggforce::facet_col(~ factor(Group, levels=c("Habitat","Bioregion")), space = "free", scales = "free_y")

data2 = data %>%  select(Study_id, Year) %>% 
distinct() %>% 
group_by(Year) %>% 
summarise(Counts = n())




p3 = ggplot(data2, aes(Year, Counts)) +
geom_col(fill = "gray10", width = 0.9) +
theme_light() +
theme(plot.margin=unit(c(0,0,0,0), "mm"),
  axis.title.y = element_text(face = "bold", size = 8, vjust = -1),
  axis.title.x = element_text(face = "bold", size = 8),
  axis.text.y = element_text(size = 6),
  axis.text.x = element_text(size = 6,  angle = 90), 
  strip.text.x = element_text(size=12),
  strip.background = element_rect(
  color="black", fill=NA, size=0.5, linetype="solid")) + 
ylab("Number of studies") +
coord_cartesian(expand = F, clip = "off") + 
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
  panel.background = element_blank(),
  panel.border = element_rect(colour = "black", fill=NA, size=1)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),
panel.border = element_blank(),
axis.line = element_line(color = 'black')) +
scale_y_continuous(breaks = c(0, 4,8,12), labels = c("0", "4","8", "12"), limits = c(0,12)) +
scale_x_continuous(breaks = seq(min(data2$Year), max(data2$Year), by = 2), limits = c(min(data2$Year),max(data2$Year)))+
ggtitle("(b)") +
theme(plot.title = element_text(size = 14,hjust = -0.3, vjust = 2))

a = plot_spacer() +  p3 + plot_spacer() + plot_layout(ncol=1, heights= c(9,10,1))
#Plot panel
p1 + p2 + a +plot_layout(widths = c(4,2, 2.5),heights= c(10,10,4), ncol=3) 


```



\newpage 

# Results


## Taxonomy and taxonomic coverage


## Habitat type and bioclimatic region


# Discussion

\newpage

# References

::: {#refs}
:::

# Supplementary material


Create definitions here based on Corine 

1)Pastures: Any type of low growing plant community that is highly influenced by human disturbance. For instance, agriculture, mowing, moderate to high grazing or urban environment. Note that this category also includes old pastures with regrowth of woody vegetation.

2)Agricultural margings: Sides of crops that can include any type of vegetation from low growing plants to trees.

3)Agricultural land: Includes any type of crop and any type of vegetation growing within them. 

4)Semi-natural grassland: Low growing plant community with relatively low disturbances but under low pressure such as seasonal mowing or extensive grazing.

5)Ruderal vegetation: Plants growing on highly disturbed sites such as road sides or mineral extraction sites.

6)Sclerophyllous vegetation: Any type of system with a dominant shrub community adapted to drought. Typical of the Mediterranean region. Note, that we have include in this category also woodlands (open coniferous forest) where the shrub community was the main focus of the study.

7) Green urban areas: Parks, private gardens or small pastures within an  urban setting. For simplicity, we have also included botanical gardens.

8) Forest/woodland understory: Any plant community sampled under a wooded group of plants 
The forest could be embedded in an agricultural setting or in a fully natural scenario. We have included here agro-forestry areas, open forest to dense forest but try to exclude forest that contains typical sclerophyllous vegetation. 

9) Riparian vegetation: Plant communities growing on river margins. 

10): Low growing plant communities with little or none human disturbance. Often located in high elevation areas within Europe.

11) Beaches, dunes, sands: Plant communities growing on sandy soil.

12) Moors and heathland: Low growing woody vegetation characteristic from low fertile soils near the coast or in alpine areas.
